%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: s2e-assist.pdf
%%Creator: Adobe Acrobat 9.3.2
%%For: epeius
%%CreationDate: 2018/3/6, 20:32:23
%%BoundingBox: 0 0 246 112
%%HiResBoundingBox: 0 0 245.0721 111.4461
%%CropBox: 0 0 245.0721 111.4461
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1195 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2017-05-22T13:24:48Z"
   xmp:CreatorTool="Microsoft® Office Visio® 2007"
   xmp:ModifyDate="2017-05-22T21:25:27+08:00"
   xmp:MetadataDate="2017-05-22T21:25:27+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Office Visio® 2007"
   xmpMM:DocumentID="uuid:7e61a1c2-2e7a-47f3-b804-78b7439e69b6"
   xmpMM:InstanceID="uuid:f16e6710-dbc6-463c-a220-17a566102067">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Windows 用户</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -111.446 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 111.446 li
245.072 111.446 li
245.072 0 li
cp
clp
[1 0 0 1 -120.42 0 ]ct
194.913 110.316 mo
122.99 110.316 li
122.99 108.876 li
193.473 108.876 li
193.473 18.126 li
194.913 18.126 li
194.913 110.316 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.498039 sep
f
gsave
122.99 18.126 mo
122.99 110.316 li
194.92 110.316 li
194.92 18.126 li
122.99 18.126 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
194.913 110.446 mo
122.99 110.446 li
122.898 110.408 li
122.86 110.316 li
122.99 110.316 li
122.86 110.316 li
122.86 108.876 li
122.99 108.876 li
122.99 110.316 li
194.92 110.316 li
194.92 18.126 li
194.913 18.126 li
194.913 18.119 li
193.473 18.119 li
193.473 17.9891 li
194.913 17.9891 li
195.005 18.027 li
195.043 18.119 li
195.043 110.316 li
195.005 110.408 li
194.913 110.446 li
f
122.99 110.316 mo
122.99 110.316 li
122.99 108.876 li
122.99 110.316 li
194.913 18.126 mo
193.473 18.126 li
193.473 18.119 li
194.913 18.119 li
194.913 18.126 li
1 /0 /CSD get_res sepcs
.74902 sep
f
grestore
gsave
121.55 108.876 mo
193.473 108.876 li
193.473 16.679 li
121.55 16.679 li
121.55 108.876 li
eclp
193.473 108.876 mo
122.99 108.876 li
122.86 108.876 li
121.55 108.876 li
121.55 16.679 li
193.473 16.679 li
193.473 17.9891 li
193.473 18.119 li
193.473 18.126 li
193.473 108.876 li
142.33 44.9261 mo
142.388 45.0346 li
144.615 46.5038 147.17 47.2385 149.725 47.2385 cv
152.28 47.2385 154.835 46.5038 157.062 45.0346 cv
159.24 43.5988 161.742 42.8811 164.246 42.881 cv
166.75 42.8811 169.255 43.5988 171.439 45.0346 cv
171.572 45.0404 li
171.64 44.9261 li
171.64 42.721 li
171.965 42.8974 172.285 43.0887 172.599 43.2946 cv
172.732 43.3004 li
172.8 43.1859 li
172.8 40.6838 li
173.327 40.9367 173.841 41.227 174.338 41.5546 cv
174.472 41.5604 li
174.54 41.446 li
174.54 38.9406 li
175.067 39.1944 175.581 39.4857 176.078 39.8145 cv
176.211 39.8205 li
176.28 39.706 li
176.28 37.7773 li
176.81 38.0319 177.328 38.3243 177.828 38.6545 cv
177.962 38.6605 li
178.03 38.546 li
178.03 23.2959 li
177.992 23.2041 li
177.9 23.1661 li
176.59 23.1661 li
176.59 21.856 li
176.552 21.764 li
176.46 21.7261 li
147.41 21.7261 li
147.318 21.764 li
147.28 21.856 li
147.28 22.8861 li
145.67 22.8861 li
145.578 22.9241 li
145.54 23.0161 li
145.54 24.626 li
143.93 24.626 li
143.838 24.6641 li
143.8 24.756 li
143.8 26.366 li
142.19 26.366 li
142.098 26.4041 li
142.06 26.496 li
142.06 41.746 li
142.19 41.746 li
142.06 41.746 li
142.118 41.8545 li
142.189 41.9009 142.259 41.9466 142.33 41.9916 cv
142.33 44.9261 li
142.46 44.9261 li
142.33 44.9261 li
level3{
gsave
clp
[1 0 0 -1 0 418.966 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [157.52 309.34 157.52 403.03 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!=fnG!=fnG!=fnG!=fkF!=fkF!=fkF!=fkF!=fkF!=fkF!=fkF!=fkF!=fkF!=fhE!=fhE!=fhE!=fhE
!=]bD!=]bD!=]bD!=]bD!=]_C!=]_C!=]_C!=]_C!=]_C!=]_C!=]_C!=]_C!=]_C!=]_C!=]\B!"BSA
!"BSA!"BSA!"BSA!"BSA!"BSA!"9M@!"9M@!"9M@!"9J?!"9J?!"9J?!"9J?!"9J?!"9J?!"9J?!"9J?
!"9J?!"9J?!"9G>!"9G>!"9G>!"9G>!"9G>!"9G>!"9G>!"9G>!"9G>!"0A=!"0><!"0><!"0><!"0><
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1N^S$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OP$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$47+I$47+I$47+I$47+I
~>
<~()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bh>r'GM5q'GM5q'GM5q
'GM5q'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',(uk&eYfi
&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te
&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]%hB0]%hB0]
~>
0 ]
>>
157.52 309.34 157.52 403.03 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
.26 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
121.55 108.876 mo
193.473 108.876 li
193.473 16.679 li
121.55 16.679 li
cp
/1 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
@
177.9 38.546 mo
177.377 38.2007 176.835 37.8966 176.28 37.6332 cv
176.28 37.1438 li
176.316 37.1672 176.352 37.1908 176.388 37.2146 cv
176.522 37.2206 li
176.59 37.1061 li
176.59 23.2959 li
177.9 23.2959 li
177.9 38.546 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.4 0 0 15.84 55.5 72.566 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 10 
/H 66 
/M[10 0 0 -66 0 66 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
pAt!mpB^MCpAt!mpB^MCpAt!mpB^MCq>pQrpBL?tpODo<pBL?upODo<pBL?upODo<r<E-'pBgSDpAt!m
pBgSDpAt!mpBgSDpAt!m!"&E,pODo<pBL?upODo<pBL?upODo<pBLF"rsAFLpAt!mpBgSDpAt!mpBgSD
pAt!mpBgbIr."GApBL?upODo<pBL?upODo<pBL?upOE2Dq#U3opBgSDpAt!mpBgSDpAt!mpBgSDp]1?q
pBL?upODo<pBL?upODo<pBL?upODo<qZd!'pBgSDpAt!mpBgSDpAt!mpBgSDpAt!mrX&E-pODo<pBL?u
pODo<pBL?upODo<pBL?upODo<pBL?upODo<pBL?upODo<pBL?uqLAKopAt!mpBgSDpAt!npBgSDpAt!n
pBgSDr;lcrpBUF!pODo<pBUF!pODo<pBUF!pODo<!!i9(pBgSDpAt!npBgSDpAt!npBgSDpAt'prs/9)
pODo<pBUF!pODo<pBUF!pODo<pBUU&r!E+IpAt!npBgSDpAt!npBgSDpAt!npBgkLq1&,>pBUF!pODo<
pBUF!pODo<pBUF!pjW9npAt!npBgSDpAt!npBgSDpAt!npBgSDqZ6WrpBUF!pODo<pBUF!pODo<pBUF!
pODo<rWi9)pBgSDpAt!npBgSDpAt!npBgSDpAt!npBgSDpAt!npBgSDpAt!npBgSDJ,~>

%%EndBinary
grestore
np
gsave
148.85 23.2959 mo
148.85 38.546 li
153.26 41.446 158.97 41.446 163.37 38.546 cv
167.78 35.636 173.49 35.636 177.9 38.546 cv
177.9 23.2959 li
148.85 23.2959 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
177.962 38.6605 mo
177.828 38.6545 li
177.328 38.3243 176.81 38.0319 176.28 37.7773 cv
176.28 37.6332 li
176.835 37.8966 177.377 38.2007 177.9 38.546 cv
177.9 23.2959 li
176.59 23.2959 li
176.59 23.1661 li
177.9 23.1661 li
177.992 23.2041 li
178.03 23.2959 li
178.03 38.546 li
177.962 38.6605 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.4 0 0 16.32 55.5 72.326 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 10 
/H 68 
/M[10 0 0 -68 0 68 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
pAt!mpB^MCpAt!mpB^MCpAt!mpB^MCq>pQrpBL?tpODo<pBL?tpODo<pBL?upODo<r<E-'pBgSDpAt!m
pBgSDpAt!mpBgSDpAt!m!"&E,pODo<pBL?upODo<pBL?upODo<pBLF"rsAFLpAt!mpBgSDpAt!mpBgSD
pAt!mpBgbIr."GApBL?upODo<pBL?upODo<pBL?upOE2Dq#U3opBgSDpAt!mpBgSDpAt!mpBgSDp]1?q
pBL?upODo<pBL?upODo<pBL?upODo<qZd!'pBgSDpAt!mpBgSDpAt!mpBgSDpAt!mrX&E-pODo<pBL?u
pODo<pBL?upODo<pBL?upODo<pBL?upODo<pBL?upODo<pBL?uqLAKopAt!mpBgSDpAt!mpBgSDpAt!n
pBgSDr;lcrpBUF!pODo<pBUF!pODo<pBUF!pODo<!!i9(pBgSDpAt!npBgSDpAt!npBgSDpAt'prs/9)
pODo<pBUF!pODo<pBUF!pODo<pBUU&r!E+IpAt!npBgSDpAt!npBgSDpAt!npBgkLq1&,>pBUF!pODo<
pBUF!pODo<pBUF!pjW9npAt!npBgSDpAt!npBgSDpAt!npBgSDqZ6WrpBUF!pODo<pBUF!pODo<pBUF!
pODo<rWi9)pBgSDpAt!npBgSDpAt!npBgSDpAt!npBgSDpAt!npBgSDpAt!npBgSDpAt!nq?d--pODo<
pBUF!pO@\~>

%%EndBinary
grestore
np
grestore
gsave
147.41 37.1061 mo
147.41 21.856 li
176.46 21.856 li
176.46 37.1061 li
172.05 34.196 166.34 34.196 161.93 37.1061 cv
157.53 40.006 151.82 40.006 147.41 37.1061 cv
eclp
176.33 36.8671 mo
176.313 36.8565 176.297 36.846 176.28 36.8355 cv
176.28 24.456 li
176.242 24.3641 li
176.15 24.326 li
174.84 24.326 li
174.84 23.0161 li
174.802 22.9241 li
174.71 22.8861 li
147.54 22.8861 li
147.54 21.986 li
176.33 21.986 li
176.33 36.8671 li
level3{
gsave
clp
[1 0 0 -1 0 418.966 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [161.93 378.94 161.93 397.86 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
161.93 378.94 161.93 397.86 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
grestore
147.41 37.1061 mo
147.28 37.1061 li
147.28 21.856 li
147.318 21.764 li
147.41 21.7261 li
176.46 21.7261 li
176.552 21.764 li
176.59 21.856 li
176.59 37.1061 li
176.522 37.2206 li
176.388 37.2146 li
174.205 35.7737 171.7 35.0535 169.195 35.0535 cv
166.69 35.0535 164.185 35.7739 162.002 37.2146 cv
159.78 38.6789 157.227 39.411 154.674 39.411 cv
152.12 39.411 149.565 38.6789 147.339 37.2146 cv
147.28 37.1061 li
147.41 37.1061 li
147.481 36.9974 li
149.665 38.4332 152.17 39.151 154.674 39.151 cv
157.178 39.151 159.68 38.4332 161.858 36.9976 cv
164.085 35.5283 166.64 34.7935 169.195 34.7935 cv
171.75 34.7935 174.305 35.5283 176.532 36.9976 cv
176.46 37.1061 li
176.33 37.1061 li
176.33 21.986 li
147.54 21.986 li
147.54 37.1061 li
147.41 37.1061 li
147.481 36.9974 li
147.41 37.1061 li
1 /1 /CSD get_res sepcs
1 sep
f
176.15 39.706 mo
175.63 39.3621 175.092 39.0591 174.54 38.7965 cv
174.54 38.3101 li
174.573 38.3314 174.605 38.3527 174.638 38.3744 cv
174.772 38.3805 li
174.84 38.266 li
174.84 37.1892 li
175.284 37.3401 175.721 37.5157 176.15 37.7158 cv
176.15 39.706 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.16 0 0 3.36 53.82 71.366 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 14 
/M[9 0 0 -14 0 14 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6t~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mg~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.15 37.5725 mo
175.721 37.3747 175.283 37.2011 174.84 37.0519 cv
174.84 36.3373 li
175.287 36.5517 175.724 36.7929 176.15 37.061 cv
176.15 37.5725 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 1.92 54.06 73.526 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.15 37.7158 mo
175.721 37.5157 175.284 37.3401 174.84 37.1892 cv
174.84 37.0519 li
175.283 37.2011 175.721 37.3747 176.15 37.5725 cv
176.15 37.7158 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 1.44 54.06 73.286 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 6 
/M[8 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.15 36.7549 mo
175.724 36.4937 175.286 36.2586 174.84 36.0496 cv
174.84 24.456 li
176.15 24.456 li
176.15 36.7549 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 13.2 54.06 74.246 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 55 
/M[8 0 0 -55 0 55 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A
#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ="pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.15 37.061 mo
175.724 36.7929 175.287 36.5517 174.84 36.3373 cv
174.84 36.0496 li
175.286 36.2586 175.724 36.4937 176.15 36.7549 cv
176.15 37.061 li
1 /0 /CSD get_res sepcs
1 sep
f
gsave
147.11 24.456 mo
147.11 39.706 li
151.52 42.606 157.23 42.606 161.63 39.706 cv
166.04 36.7961 171.75 36.7961 176.15 39.706 cv
176.15 24.456 li
147.11 24.456 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
176.211 39.8205 mo
176.078 39.8145 li
175.581 39.4857 175.067 39.1944 174.54 38.9406 cv
174.54 38.7965 li
175.092 39.0591 175.63 39.3621 176.15 39.706 cv
176.15 37.7158 li
176.193 37.736 176.237 37.7566 176.28 37.7773 cv
176.28 39.706 li
176.211 39.8205 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.4 0 0 2.64 53.82 71.366 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 11 
/M[10 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6t~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mg~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.28 37.6332 mo
176.237 37.6128 176.193 37.5924 176.15 37.5725 cv
176.15 37.061 li
176.193 37.0883 176.237 37.1159 176.28 37.1438 cv
176.28 37.6332 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 1.2 55.26 73.526 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.28 37.7773 mo
176.237 37.7566 176.193 37.736 176.15 37.7158 cv
176.15 37.5725 li
176.193 37.5924 176.237 37.6128 176.28 37.6332 cv
176.28 37.7773 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 .96 55.26 73.286 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.28 36.8355 mo
176.237 36.8083 176.193 36.7815 176.15 36.7549 cv
176.15 24.456 li
174.84 24.456 li
174.84 24.326 li
176.15 24.326 li
176.242 24.3641 li
176.28 24.456 li
176.28 36.8355 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.16 0 0 13.2 54.06 74.246 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 55 
/M[9 0 0 -55 0 55 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgkC#RC\A#RC\A
#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tG;"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pG/6"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8T+!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,#3"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP88"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U"r2"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8T+!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)q~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
176.28 37.1438 mo
176.237 37.1159 176.193 37.0883 176.15 37.061 cv
176.15 36.7549 li
176.193 36.7815 176.237 36.8083 176.28 36.8355 cv
176.28 37.1438 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
145.67 38.266 mo
145.67 23.0161 li
174.71 23.0161 li
174.71 38.266 li
170.31 35.3559 164.6 35.3559 160.19 38.266 cv
155.79 41.1661 150.08 41.1661 145.67 38.266 cv
eclp
174.58 38.0267 mo
174.567 38.0183 174.553 38.0098 174.54 38.0014 cv
174.54 26.196 li
174.502 26.1041 li
174.41 26.066 li
173.1 26.066 li
173.1 24.756 li
173.062 24.6641 li
172.97 24.626 li
145.8 24.626 li
145.8 23.1461 li
174.58 23.1461 li
174.58 38.0267 li
level3{
gsave
clp
[1 0 0 -1 0 418.966 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [160.19 377.77 160.19 396.7 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
160.19 377.77 160.19 396.7 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
grestore
145.67 38.266 mo
145.54 38.266 li
145.54 23.0161 li
145.578 22.9241 li
145.67 22.8861 li
174.71 22.8861 li
174.802 22.9241 li
174.84 23.0161 li
174.84 38.266 li
174.772 38.3805 li
174.638 38.3744 li
172.46 36.9338 169.958 36.2136 167.454 36.2135 cv
164.95 36.2136 162.445 36.9338 160.262 38.3745 cv
158.04 39.8388 155.487 40.5711 152.934 40.571 cv
150.38 40.5711 147.825 39.8388 145.599 38.3747 cv
145.54 38.266 li
145.67 38.266 li
145.741 38.1573 li
147.925 39.5931 150.43 40.3109 152.934 40.3111 cv
155.438 40.3109 157.94 39.5933 160.118 38.1575 cv
162.345 36.6883 164.9 35.9534 167.454 35.9536 cv
170.007 35.9534 172.56 36.6883 174.782 38.1575 cv
174.71 38.266 li
174.58 38.266 li
174.58 23.1461 li
145.8 23.1461 li
145.8 38.266 li
145.67 38.266 li
145.741 38.1573 li
145.67 38.266 li
1 /1 /CSD get_res sepcs
1 sep
f
174.41 41.446 mo
173.89 41.1035 173.352 40.8014 172.8 40.5398 cv
172.8 40.0503 li
172.833 40.0715 172.866 40.093 172.898 40.1145 cv
173.032 40.1205 li
173.1 40.006 li
173.1 38.3508 li
173.544 38.5022 173.981 38.6782 174.41 38.8789 cv
174.41 41.446 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.16 0 0 3.84 52.14 69.686 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 16 
/M[9 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rt~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.41 38.7355 mo
173.981 38.5371 173.544 38.3632 173.1 38.2135 cv
173.1 37.5007 li
173.547 37.7158 173.984 37.9578 174.41 38.2268 cv
174.41 38.7355 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 1.92 52.38 72.326 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.41 38.8789 mo
173.981 38.6782 173.544 38.5022 173.1 38.3508 cv
173.1 38.2135 li
173.544 38.3632 173.981 38.5371 174.41 38.7355 cv
174.41 38.8789 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 1.2 52.38 72.326 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.41 37.9204 mo
173.984 37.6583 173.546 37.4225 173.1 37.2127 cv
173.1 26.196 li
174.41 26.196 li
174.41 37.9204 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 12.48 52.38 73.046 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 52 
/M[8 0 0 -52 0 52 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A
#RC\A#RC\A#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.41 38.2268 mo
173.984 37.9578 173.547 37.7158 173.1 37.5007 cv
173.1 37.2127 li
173.546 37.4225 173.984 37.6583 174.41 37.9204 cv
174.41 38.2268 li
1 /0 /CSD get_res sepcs
1 sep
f
gsave
145.37 26.196 mo
145.37 41.446 li
149.77 44.346 155.48 44.346 159.89 41.446 cv
164.29 38.546 170.01 38.546 174.41 41.446 cv
174.41 26.196 li
145.37 26.196 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
174.472 41.5604 mo
174.338 41.5546 li
173.841 41.227 173.327 40.9367 172.8 40.6838 cv
172.8 40.5398 li
173.352 40.8014 173.89 41.1035 174.41 41.446 cv
174.41 38.8789 li
174.453 38.8993 174.497 38.9198 174.54 38.9406 cv
174.54 41.446 li
174.472 41.5604 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.4 0 0 3.6 52.14 69.446 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 15 
/M[10 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6t~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mg~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.54 38.7965 mo
174.497 38.776 174.453 38.7555 174.41 38.7355 cv
174.41 38.2268 li
174.453 38.2542 174.497 38.2821 174.54 38.3101 cv
174.54 38.7965 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 1.2 53.58 72.326 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.54 38.9406 mo
174.497 38.9198 174.453 38.8993 174.41 38.8789 cv
174.41 38.7355 li
174.453 38.7555 174.497 38.776 174.54 38.7965 cv
174.54 38.9406 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 .96 53.58 72.086 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.54 38.0014 mo
174.497 37.9742 174.453 37.9471 174.41 37.9204 cv
174.41 26.196 li
173.1 26.196 li
173.1 26.066 li
174.41 26.066 li
174.502 26.1041 li
174.54 26.196 li
174.54 38.0014 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.16 0 0 12.72 52.38 73.046 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 53 
/M[9 0 0 -53 0 53 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A
#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RCY?#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U"r2"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP57"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pG/6"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.54 38.3101 mo
174.497 38.2821 174.453 38.2542 174.41 38.2268 cv
174.41 37.9204 li
174.453 37.9471 174.497 37.9742 174.54 38.0014 cv
174.54 38.3101 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
143.93 40.006 mo
143.93 24.756 li
172.97 24.756 li
172.97 40.006 li
168.57 37.1061 162.85 37.1061 158.45 40.006 cv
154.04 42.9061 148.33 42.9061 143.93 40.006 cv
eclp
172.84 39.7673 mo
172.827 39.7588 172.813 39.7505 172.8 39.742 cv
172.8 27.936 li
172.762 27.844 li
172.67 27.806 li
171.36 27.806 li
171.36 26.496 li
171.322 26.4041 li
171.23 26.366 li
144.06 26.366 li
144.06 24.8861 li
172.84 24.8861 li
172.84 39.7673 li
level3{
gsave
clp
[1 0 0 -1 0 418.966 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [158.45 376.03 158.45 394.96 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
158.45 376.03 158.45 394.96 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
grestore
143.93 40.006 mo
143.8 40.006 li
143.8 24.756 li
143.838 24.6641 li
143.93 24.626 li
172.97 24.626 li
173.062 24.6641 li
173.1 24.756 li
173.1 40.006 li
173.032 40.1205 li
172.898 40.1145 li
170.72 38.6789 168.215 37.9611 165.71 37.9611 cv
163.205 37.9611 160.7 38.6789 158.521 40.1145 cv
156.295 41.5788 153.74 42.3111 151.186 42.3111 cv
148.633 42.3111 146.08 41.5789 143.858 40.1145 cv
143.8 40.006 li
143.93 40.006 li
144.002 39.8975 li
146.18 41.3333 148.682 42.0511 151.186 42.0511 cv
153.69 42.0511 156.195 41.3333 158.378 39.8973 cv
160.6 38.4332 163.155 37.701 165.71 37.701 cv
168.265 37.701 170.82 38.4332 173.042 39.8975 cv
172.97 40.006 li
172.84 40.006 li
172.84 24.8861 li
144.06 24.8861 li
144.06 40.006 li
143.93 40.006 li
144.002 39.8975 li
143.93 40.006 li
1 /1 /CSD get_res sepcs
1 sep
f
172.67 43.1859 mo
172.334 42.9649 171.99 42.7607 171.64 42.5733 cv
171.64 40.195 li
171.988 40.3221 172.332 40.4647 172.67 40.6224 cv
172.67 43.1859 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.68 0 0 3.6 50.94 68.006 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 15 
/M[7 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#l~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.67 40.4791 mo
172.331 40.3231 171.988 40.1823 171.64 40.0566 cv
171.64 39.3822 li
171.99 39.5605 172.334 39.7556 172.67 39.9674 cv
172.67 40.4791 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.68 0 0 1.68 50.94 70.646 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 7 
/M[7 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"T~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^A~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.67 40.6224 mo
172.332 40.4647 171.988 40.3221 171.64 40.195 cv
171.64 40.0566 li
171.988 40.1823 172.331 40.3231 172.67 40.4791 cv
172.67 40.6224 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.68 0 0 1.44 50.94 70.406 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 6 
/M[7 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U+~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V9~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.67 39.6613 mo
172.333 39.455 171.99 39.265 171.64 39.0912 cv
171.64 29.686 li
171.602 29.594 li
171.51 29.556 li
171.36 29.556 li
171.36 27.936 li
172.67 27.936 li
172.67 39.6613 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.16 0 0 12.48 50.46 71.366 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 52 
/M[9 0 0 -52 0 52 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A
#RC\A#RC\A#RC\A#RC\A#R:S>#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP57"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pG/6"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tG;"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,#3"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rt~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.67 39.9674 mo
172.334 39.7556 171.99 39.5605 171.64 39.3822 cv
171.64 39.0912 li
171.99 39.265 172.333 39.455 172.67 39.6613 cv
172.67 39.9674 li
1 /0 /CSD get_res sepcs
1 sep
f
gsave
143.63 27.936 mo
143.63 43.1859 li
148.03 46.096 153.74 46.096 158.15 43.1859 cv
162.55 40.286 168.26 40.286 172.67 43.1859 cv
172.67 27.936 li
143.63 27.936 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
172.732 43.3004 mo
172.599 43.2946 li
172.285 43.0887 171.965 42.8974 171.64 42.721 cv
171.64 42.5733 li
171.99 42.7607 172.334 42.9649 172.67 43.1859 cv
172.67 40.6224 li
172.713 40.6426 172.757 40.6631 172.8 40.6838 cv
172.8 43.1859 li
172.732 43.3004 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.68 0 0 3.36 50.94 67.766 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 14 
/M[7 0 0 -14 0 14 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6t~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mg~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.8 40.5398 mo
172.757 40.5192 172.714 40.4991 172.67 40.4791 cv
172.67 39.9674 li
172.714 39.9948 172.757 40.0224 172.8 40.0503 cv
172.8 40.5398 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.72 0 0 1.2 51.9 70.646 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3~>
<~"9\i1"9\i1"9\i1"9\i~>
<~"U,&5"U,&5"U,&5"U,&~>
<~^V@Ou^V@Ou^V@Ou^V@M~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.8 40.6838 mo
172.757 40.6631 172.713 40.6426 172.67 40.6224 cv
172.67 40.4791 li
172.714 40.4991 172.757 40.5192 172.8 40.5398 cv
172.8 40.6838 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.72 0 0 .96 51.9 70.406 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.8 39.742 mo
172.757 39.7149 172.713 39.6879 172.67 39.6613 cv
172.67 27.936 li
171.36 27.936 li
171.36 27.806 li
172.67 27.806 li
172.762 27.844 li
172.8 27.936 li
172.8 39.742 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[2.16 0 0 12.72 50.46 71.366 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 53 
/M[9 0 0 -53 0 53 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A
#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RCY?#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U"r2"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i0!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP57"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pG/6"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
172.8 40.0503 mo
172.757 40.0224 172.714 39.9948 172.67 39.9674 cv
172.67 39.6613 li
172.713 39.6879 172.757 39.7149 172.8 39.742 cv
172.8 40.0503 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
142.19 41.746 mo
142.19 26.496 li
171.23 26.496 li
171.23 41.746 li
166.82 38.8461 161.11 38.8461 156.71 41.746 cv
152.3 44.656 146.59 44.656 142.19 41.746 cv
eclp
142.33 41.6824 mo
142.327 41.6802 142.323 41.6781 142.32 41.6759 cv
142.32 26.626 li
171.1 26.626 li
171.1 29.556 li
142.46 29.556 li
142.368 29.594 li
142.33 29.686 li
142.33 41.6824 li
level3{
gsave
clp
[1 0 0 -1 0 418.966 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [156.71 374.29 156.71 393.22 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
156.71 374.29 156.71 393.22 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
grestore
142.19 41.746 mo
142.06 41.746 li
142.06 26.496 li
142.098 26.4041 li
142.19 26.366 li
171.23 26.366 li
171.322 26.4041 li
171.36 26.496 li
171.36 41.746 li
171.292 41.8605 li
171.159 41.8546 li
168.975 40.4189 166.47 39.701 163.966 39.701 cv
161.462 39.701 158.96 40.4189 156.781 41.8545 cv
154.555 43.3239 152 44.0585 149.446 44.0585 cv
146.893 44.0585 144.34 43.3239 142.118 41.8545 cv
142.06 41.746 li
142.19 41.746 li
142.262 41.6376 li
144.44 43.0783 146.942 43.7985 149.446 43.7985 cv
151.95 43.7985 154.455 43.0783 156.638 41.6375 cv
158.86 40.1733 161.413 39.441 163.966 39.441 cv
166.52 39.441 169.075 40.1732 171.301 41.6375 cv
171.23 41.746 li
171.1 41.746 li
171.1 26.626 li
142.32 26.626 li
142.32 41.746 li
142.19 41.746 li
142.262 41.6376 li
142.19 41.746 li
1 /1 /CSD get_res sepcs
1 sep
f
149.725 47.1085 mo
147.195 47.1085 144.665 46.381 142.46 44.9261 cv
142.46 42.0731 li
142.8 42.2833 143.147 42.477 143.5 42.6538 cv
143.5 43.1859 li
143.63 43.1859 li
143.5 43.1859 li
143.558 43.2945 li
145.78 44.7638 148.333 45.4985 150.886 45.4985 cv
153.44 45.4985 155.995 44.7638 158.221 43.2946 cv
160.4 41.8588 162.902 41.1412 165.406 41.141 cv
167.503 41.1411 169.601 41.6446 171.51 42.6515 cv
171.51 44.9261 li
169.305 43.476 166.775 42.751 164.246 42.751 cv
161.718 42.751 159.19 43.476 156.99 44.9261 cv
154.785 46.381 152.255 47.1085 149.725 47.1085 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[29.76 0 0 6.72 21.66 63.926 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 124 
/H 28 
/M[124 0 0 -28 0 28 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
K`V/XL^3e`M[B0.Ndp^&OTG"XPR$X`QO3#.RXaQ&SH7jXTEjK`UC#k.VLRD&W<(]XX9[>`Y6i^.Z@C7&
[/nPX\-L1`]*ZQ.^44*&_#_CX`!=$``sKD.b($r&blP6Xcj-l`dg<7.epje&f`A)Xg]s_`h[-*.id[X&
jT1&?rX"AeqgXNRp]6BUo`pTand1Nemsg[RliEOUkm*aajp@[ej+!hRhuT\Uh$9nag'Ohef70uRe,ciU
d0I&ac3^uebC@-Ra8s!U`<X3a_?n-e^OO:R]E-.U\Hg@a[L(:eZ[^GRYQ<;UXU!MaWX7GeVgmTRU]KHU
Ta0ZaKaIa.Lk#:&MZNSXNX,4`OU:T.P^i-&QN?FXRKr'`SI+G.TRYu&UB09XV?bo`W<q:.XFJh&Y6!,X
Z3Sb`[0b-.\:;[&])ftX^'DU`_$Ru.`.,N&`rWgXap5H`bmCh.d!rA&dfHZXed&;`fa4[.gjc4&hZ9MX
iWl.`jU$WjrW.fUqZi#ap^)reom`*Rnc=sUmg#0alj9*el$o7RjoM+Uis2=ai!H7eh1)DRJ,~>

%%EndBinary
grestore
np
150.886 45.3685 mo
148.357 45.3685 145.83 44.641 143.63 43.1859 cv
143.63 42.7181 li
145.464 43.6117 147.455 44.0585 149.446 44.0585 cv
150.406 44.0585 151.366 43.9548 152.308 43.7473 cv
152.414 43.7498 152.52 43.7511 152.626 43.7511 cv
155.18 43.7511 157.735 43.0189 159.962 41.5546 cv
161.32 40.6594 162.805 40.0434 164.338 39.7063 cv
166.717 39.7738 169.083 40.4898 171.159 41.8546 cv
171.292 41.8605 li
171.36 41.746 li
171.36 40.0962 li
171.41 40.1132 171.46 40.1306 171.51 40.1482 cv
171.51 42.5046 li
169.598 41.5088 167.502 41.011 165.406 41.011 cv
162.877 41.011 160.35 41.736 158.15 43.1859 cv
155.945 44.641 153.415 45.3685 150.886 45.3685 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[28.56 0 0 6.48 22.86 65.606 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 119 
/H 27 
/M[119 0 0 -27 0 27 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 119 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
M?3MUOp(:YRK_rjU;,XfWWCcUZ38PY\cp3j_S<nfaoT$UdKHfYg'+IjikM/fl2d:UncY'Yq?;bk!!.uY
p]Qc`n-,9bkeEn-huTkZfEAM`ciq#baM5X-^]DUZ\-17`YQ`bbW5%B-TE4?ZQj!!`O9PLbMSK/lMuiYU
PQZjIq7i*-nH#'Zkld^`i<?4bftXi-d/gfZaTTH`_$.sb\\HS-YlWPZW<D2`T`s]bRD8=-OTG:ZM?En_
MZrmjPJ?SfRfV^UUBKKYWs..jZbOif])ftU_Z[aYb6>Dje%`*fgB"5Uirl"YlNNZjo=p@fqZ2QWrrn>b
pV2s-M?3MUOp(:YRK_rjU;,XfWWCcUZ38PY\cp3j_S<nfaoT$UdKHfYg'+IjikM/fl2d:UncY'Yq?;bk
!!.uYp]Qc`n-,9bkeEn-huTkZfEAM`ciq#baM5X-^]DUZ\-17`YQ`bbW5%B-TE4?ZQj!!`O9PLbMSK/l
MuiYUPQZjIq7i*-nH#'Zkld^`i<?4bftXi-J,~>

%%EndBinary
grestore
np
152.838 43.6193 mo
154.216 43.2562 155.549 42.6679 156.781 41.8545 cv
156.826 41.8249 156.871 41.7956 156.917 41.7666 cv
158.525 41.4543 160.089 40.8425 161.521 39.9314 cv
162.274 39.7882 163.036 39.7118 163.8 39.7021 cv
162.433 40.0602 161.111 40.6415 159.89 41.446 cv
157.746 42.8556 155.296 43.5801 152.838 43.6193 cv
171.51 40.0104 mo
171.46 39.9929 171.41 39.9758 171.36 39.9589 cv
171.36 39.2438 li
171.41 39.2678 171.46 39.2922 171.51 39.3169 cv
171.51 40.0104 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[19.44 0 0 5.04 31.98 67.526 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 81 
/H 21 
/M[81 0 0 -21 0 21 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
YQ<2Sh?'n`p><L>a8tN+YQF+m`WNp3o\ZkRhu_:-Z31+/Yi!t3g]=V\p]J&/b2;C>YQ=+m_ud[UncQ,R
iW7@+Zi^1-YQNM7g>B+8q?",-bQHr/Yi"mM_?%ISn,ffrjPS5>[K67+YQEJ[fE8A8quO2+c3!#-YQOFQ
^u*$1mK'Nnjo`d/\DR,>YQ<J[ecN&Xrnk'>ciN)+YQD$2e)0$>YQ=G!])p%Ukl\0IlN,!+]`Rg-YQNh@
dGM51rrK>*eH=S/Yi#3V\H0hSk5qjimGGk>^B*m+YQEedcNCQ3rSOg[f)jY-YQOaZ\)5C1jT2RemfUE/
_;Fb>YQ<edblY<UqZF([J,~>

%%EndBinary
grestore
np
157.238 41.567 mo
158.468 40.8271 159.79 40.3073 161.151 40.0075 cv
159.92 40.7451 158.598 41.265 157.238 41.567 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[4.56 0 0 2.4 36.54 69.446 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 10 
/M[19 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi~>
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
156.917 41.7666 mo
157.023 41.6984 157.13 41.6318 157.238 41.567 cv
158.598 41.265 159.92 40.7451 161.151 40.0075 cv
161.274 39.9803 161.397 39.955 161.521 39.9314 cv
160.089 40.8425 158.525 41.4543 156.917 41.7666 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[5.52 0 0 2.64 36.06 69.206 ]ct
snap_to_device
<<
/T 1
/W 23 
/H 11 
/M[23 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6mf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
152.626 43.7511 mo
152.52 43.7511 152.414 43.7498 152.308 43.7473 cv
152.485 43.7083 152.662 43.6656 152.838 43.6193 cv
155.296 43.5801 157.746 42.8556 159.89 41.446 cv
161.111 40.6415 162.433 40.0602 163.8 39.7021 cv
163.855 39.7014 163.911 39.701 163.966 39.701 cv
164.09 39.701 164.214 39.7028 164.338 39.7063 cv
162.805 40.0434 161.32 40.6594 159.962 41.5546 cv
157.735 43.0189 155.18 43.7511 152.626 43.7511 cv
171.51 40.1482 mo
171.46 40.1306 171.41 40.1132 171.36 40.0962 cv
171.36 39.9589 li
171.41 39.9758 171.46 39.9929 171.51 40.0104 cv
171.51 40.1482 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[19.92 0 0 4.8 31.5 67.286 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 83 
/H 20 
/M[83 0 0 -20 0 20 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 83 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 83 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 83 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 83 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
Xo[&Sg&eDZr84j<ciN#)Xoe>"\-'q3jPR*@ncHK+`WPH-Y2AUI_?%ISmK0NnkhjG<]E.U)XodVcbQG?3
ptr4Th?)(+Z31%-Y2@n5ecDoT!!BD,eDK$<Xo\D$Zi\PUhug.>p&V])ao^Z+Xon4O^>Hm1l2e$hliY--
^u+V<Xo[\ea9&sUoE28RiW7:)[K?7+XomM;dbh;1rW0/'eH=M-Y2B-XZN8DShZBq_pYWL<b5pZ)Xoe.r
]`Z:3l//WEm/k-+_#s*-Y2AFD`rWgSo)c&sj58)<[fQ7)XodG^d0$]3rSOaYf`K_+Xoe[]YM[h1gB"GY
qZF2-cem[<J,~>

%%EndBinary
grestore
np
171.51 39.0275 mo
171.46 39.0033 171.41 38.9795 171.36 38.9561 cv
171.36 29.686 li
171.51 29.686 li
171.51 39.0275 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 10.08 50.46 72.086 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 42 
/M[4 0 0 -42 0 42 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
171.51 39.3169 mo
171.46 39.2922 171.41 39.2678 171.36 39.2438 cv
171.36 38.9561 li
171.41 38.9795 171.46 39.0033 171.51 39.0275 cv
171.51 39.3169 li
1 /0 /CSD get_res sepcs
1 sep
f
150.886 45.4985 mo
148.333 45.4985 145.78 44.7638 143.558 43.2945 cv
143.5 43.1859 li
143.63 43.1859 li
143.5 43.1859 li
143.5 42.6538 li
143.543 42.6755 143.587 42.6969 143.63 42.7181 cv
143.63 43.1859 li
143.63 43.1859 li
145.83 44.641 148.357 45.3685 150.886 45.3685 cv
153.415 45.3685 155.945 44.641 158.15 43.1859 cv
160.35 41.736 162.877 41.011 165.406 41.011 cv
167.502 41.011 169.598 41.5088 171.51 42.5046 cv
171.51 42.6515 li
169.601 41.6446 167.503 41.1411 165.406 41.141 cv
162.902 41.1412 160.4 41.8588 158.221 43.2946 cv
155.995 44.7638 153.44 45.4985 150.886 45.4985 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[28.8 0 0 5.28 22.62 65.606 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 120 
/H 22 
/M[120 0 0 -22 0 22 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
M#mGUO9G.YQNc`jT"j@fV#fEUX9@,YZN\^j]"c>f_#_CUa99*YcNU\jf"\<fh#XAUj92(YlNNZjo"U:f
q#Q?U!!J,^qnJ3,oDt6Ym0&s_joqOahnQ5,fE&8Yd0-u_ap#Qa_nX7,]E-:Y[05"_Xp*SaVn_9,TE4<Y
R0<$_M$<ajOMCAfQN?FUScn-YV$5_jXM<?fZN8DU\cg+Y_$.]jaM5=fcN1BUec`)Yh$'[jjM.;flN*@U
ncY'Yq#uYj!5F?kqZMr_oECNamD#4,joM7YhZTt_fEJPadD*6,aoT9Y_Z\!_]EQRa[D18,Xo[;YVZc#_
TEXTaRD8:,M#mGUO9G.YQNc`jT"j@fV#fEUX9@,YZN\^j]"c>f_#_CUa99*YcNU\jf"\<fh#XAUj92(Y
lNNZjo"U:fq#Q?U!!J,^qnJ3,J,~>

%%EndBinary
grestore
np
149.446 43.7985 mo
147.018 43.7985 144.591 43.1211 142.46 41.7662 cv
142.46 29.686 li
171.1 29.686 li
171.1 41.5076 li
168.921 40.1299 166.443 39.441 163.966 39.441 cv
161.413 39.441 158.86 40.1733 156.638 41.6375 cv
154.455 43.0783 151.95 43.7985 149.446 43.7985 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[29.28 0 0 14.88 21.66 67.286 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 122 
/H 62 
/M[122 0 0 -62 0 62 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
LC*k_N!B"]OU(H,Q@J9.RgJ9_TEaE]V$Gk,Wdi\.Y6i\_Zj+h]\Hg9,^44*-_[+$^a9K6]bm1\,dXSM-
f*JG^g]jY]i<Q*,k'rp-lNij^n-5']o`pM,qL=>-rs48^M?`m+O+6d-PR-^^Jd.eNjaX%Ti!?7eJd./<
pOA<TnctHcm0/s_kQ[[aj+!nTh?U%cf`eP_e-<8ac[WKTap5Wc`<F-_^]qja]78(T[Kk4cYm&__X9RGa
VgmZTU'KfcSHXTKn-,#*om_u,q?Mi\Ka%I*MLYF,NsG:\Jd%PGl@5CTjT_Iai!$%_LB[U*N.:R+OTt@[
Jd%VIk^T7Tis)=ah?AK7Y6EF*["$C+\H^1Z^')CY_Zdi*aFCf+bm(TZdKHfYf*/7*gjc4+i<H"Zjoh4Y
lNNZ*n:-W*o`^?YJcu)VLO]:,M?WeYJcq;@msgaTl33a_jTL/<W!%m*qur#_pB-!LQ36N(Rt'W*TEX?X
Jci"Tfmg2Te-32_cNAb$^&u?(_gfH)a99*WJcjF'Z%(ATX9@;]VZVMQjo_0(l[P9)n-"pWJckiOM1>PT
LBRSYJch&9oRE*Tmf]$]l2uV?UBBG(W.0R*qu_NQOTY0(Q@J9)RfqpWJchhOhLDPTf`\J]e,t:)\HC!(
^44*)_Z[aWJcj7"[XZ_TYlrY]X94%Vi<,g(k'rp(JcgT,o`L5(qL=>(Jcgl4q1"HToE0[IJchSHjaX%T
hufn[Jcgr6pOA<TncOIGJchYJj+!nTh?/?3Jci@^c[WKTaof?[`<*pY^]VX[]78(T[KFq[Yl`MYX975[
VgmZTU''N[SHA*YQilg[PCN7TNWOe6K`_7'MLYF'Jc^N*R0)Z'Sq#i'Jc_kPLB@C'N.:R'Jc^N*Rf_f'
TRYu'Jc^N*Y6*4'["$C'Jc^N*_ZIW'aFCf'Jc^N*f)i%'gjc4&i;oYSjoV(SlN*B&n:-W&o`:'Sq>uKS
rrIn)rW.lWq#ZTYoDt0WmsgaTl2cJ;JcVeNLO]4&JcUH(Q3$B&Rt'W&JcUH(WWCe&YCG%&JcUH(^&c3&
_gfH&JcUH(dK-V&f7/;~>

%%EndBinary
grestore
np
149.446 44.0585 mo
147.455 44.0585 145.464 43.6117 143.63 42.7181 cv
143.63 42.7181 li
143.587 42.6969 143.543 42.6755 143.5 42.6538 cv
143.147 42.477 142.8 42.2833 142.46 42.0731 cv
142.46 41.7662 li
144.591 43.1211 147.018 43.7985 149.446 43.7985 cv
151.95 43.7985 154.455 43.0783 156.638 41.6375 cv
158.86 40.1733 161.413 39.441 163.966 39.441 cv
166.443 39.441 168.921 40.1299 171.1 41.5076 cv
171.1 29.686 li
171.36 29.686 li
171.36 38.9561 li
171.36 39.2438 li
171.36 39.9589 li
171.36 40.0962 li
171.36 41.746 li
171.292 41.8605 li
171.159 41.8546 li
169.083 40.4898 166.717 39.7738 164.338 39.7063 cv
164.214 39.7028 164.09 39.701 163.966 39.701 cv
163.911 39.701 163.855 39.7014 163.8 39.7021 cv
163.8 39.7021 li
163.036 39.7118 162.274 39.7882 161.521 39.9314 cv
161.397 39.955 161.274 39.9803 161.151 40.0075 cv
161.151 40.0075 li
159.79 40.3073 158.468 40.8271 157.238 41.567 cv
157.238 41.567 li
157.13 41.6318 157.023 41.6984 156.917 41.7666 cv
156.871 41.7956 156.826 41.8249 156.781 41.8545 cv
155.549 42.6679 154.216 43.2562 152.838 43.6193 cv
152.838 43.6193 li
152.662 43.6656 152.485 43.7083 152.308 43.7473 cv
151.366 43.9548 150.406 44.0585 149.446 44.0585 cv
1 /0 /CSD get_res sepcs
1 sep
f
gsave
142.46 29.686 mo
142.46 44.9261 li
146.87 47.836 152.58 47.836 156.99 44.9261 cv
161.39 42.026 167.1 42.026 171.51 44.9261 cv
171.51 29.686 li
142.46 29.686 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
149.725 47.2385 mo
147.17 47.2385 144.615 46.5038 142.388 45.0346 cv
142.33 44.9261 li
142.46 44.9261 li
142.33 44.9261 li
142.33 41.9916 li
142.373 42.0191 142.416 42.0462 142.46 42.0731 cv
142.46 44.9261 li
142.46 44.9261 li
144.665 46.381 147.195 47.1085 149.725 47.1085 cv
152.255 47.1085 154.785 46.381 156.99 44.9261 cv
159.19 43.476 161.718 42.751 164.246 42.751 cv
166.775 42.751 169.305 43.476 171.51 44.9261 cv
171.51 42.6515 li
171.553 42.6745 171.597 42.6975 171.64 42.721 cv
171.64 44.9261 li
171.572 45.0404 li
171.439 45.0346 li
169.255 43.5988 166.75 42.8811 164.246 42.881 cv
161.742 42.8811 159.24 43.5988 157.062 45.0346 cv
154.835 46.5038 152.28 47.2385 149.725 47.2385 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[30 0 0 6 21.66 63.926 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 125 
/H 25 
/M[125 0 0 -25 0 25 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
KE;)XL'RY`L^Es.MLYF&MuiYXNX,4`O9tN.P(3!&PQC4XQ3Zd`QjN).RXaQ&S,qdXSd4?`TF'Y.U4;,&
U]K?XV?bo`W!V4.Wdi\&X9$oXXp<J`YR/d.Z@C7&ZiSJX[Kk%`\-^?.\pqg&]E-%X^'DU`^^7o._LI4>
rs+8`r<\8dqgXKQq#QETpBQ]`oa-]do7)pQnH"jTmg#-`m0T-dl[P@QklI:Tk6IR`jU%Rdj+!eQi;o_T
hZp"`h$L"dgOH5Qf`A/Tf*AG`eHrGddsnZQd/gTTcNgl`bmCldbC@*QaT9$T`s9<``<j<d_gfOQKE;)X
L'RY`L^Es.MLYF&MuiYXNX,4`O9tN.P(3!&PQC4XQ3Zd`QjN).RXaQ&S,qdXSd4?`TF'Y.U4;,&U]K?X
V?bo`W!V4.Wdi\&X9$oXXp<J`YR/d.Z@C7&ZiSJX[Kk%`\-^?.\pqg&]E-%X^'DU`^^7o._LI4>rs+8`
r<\8dqgXKQJ,~>

%%EndBinary
grestore
np
171.64 42.5733 mo
171.597 42.5502 171.553 42.5272 171.51 42.5046 cv
171.51 40.1482 li
171.553 40.1635 171.597 40.1792 171.64 40.195 cv
171.64 42.5733 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 3.12 50.7 68.486 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 13 
/M[4 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
171.64 40.0566 mo
171.597 40.041 171.553 40.0256 171.51 40.0104 cv
171.51 39.3169 li
171.553 39.3385 171.597 39.3602 171.64 39.3822 cv
171.64 40.0566 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 1.44 50.7 71.126 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 6 
/M[4 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-~>
<~hr!>Khr!>Khr!>Khr!>Khr!>Khr!>K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
171.64 40.195 mo
171.597 40.1792 171.553 40.1635 171.51 40.1482 cv
171.51 40.0104 li
171.553 40.0256 171.597 40.041 171.64 40.0566 cv
171.64 40.195 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 .96 50.7 70.886 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%~>
<~!WiE)!WiE)!WiE)!WiE)~>
<~!s8W-!s8W-!s8W-!s8W-~>
<~hr!>Khr!>Khr!>Khr!>K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
171.64 39.0912 mo
171.597 39.0697 171.553 39.0484 171.51 39.0275 cv
171.51 29.686 li
171.36 29.686 li
171.36 29.556 li
171.51 29.556 li
171.602 29.594 li
171.64 29.686 li
171.64 39.0912 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.2 0 0 10.08 50.46 72.086 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 42 
/M[5 0 0 -42 0 42 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!<E3%!<E3%!<E~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%
!<E3%!<E3%!<E3%!<E3%!<E~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W,!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!<E3%!<E3%!<E~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V9~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
171.64 39.3822 mo
171.597 39.3602 171.553 39.3385 171.51 39.3169 cv
171.51 39.0275 li
171.553 39.0484 171.597 39.0697 171.64 39.0912 cv
171.64 39.3822 li
1 /0 /CSD get_res sepcs
1 sep
f
171.64 42.721 mo
171.597 42.6975 171.553 42.6745 171.51 42.6515 cv
171.51 42.5046 li
171.553 42.5272 171.597 42.5502 171.64 42.5733 cv
171.64 42.721 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 .96 50.7 68.246 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%~>
<~"9\i1"9\i1"9\i1"9\i1~>
<~"U,&5"U,&5"U,&5"U,&5~>
<~^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
142.46 41.7662 mo
142.417 41.7385 142.373 41.7106 142.33 41.6824 cv
142.33 29.686 li
142.368 29.594 li
142.46 29.556 li
171.1 29.556 li
171.1 29.686 li
142.46 29.686 li
142.46 41.7662 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[29.28 0 0 12.96 21.66 69.206 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 122 
/H 54 
/M[122 0 0 -54 0 54 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
LC*k_N!B"]OU(H,Q@J9.RgJ9_TEaE]V$Gk,Wdi\.Y6i\_Zj+h]\Hg9,^44*-_[+$^a9K6]bm1\,dXSM-
f*JG^g]jY]i<Q*,k'rp-lNij^n-5']o`pM,qL=>-rs48^M?`m+O+6d-PR-^^Jd.eNjaX%Ti!?7eJd./<
pOA<TnctHcm0/s_kQ[[aj+!nTh?U%cf`eP_e-<8ac[WKTap5Wc`<F-_^]qja]78(T[Kk4cYm&__X9RGa
VgmZTU'KfcSHXTKn-,#*om_u,q?Mi\Ka%I*MLYF,NsG:\Jd%PGl@5CTjT_Iai!$%_LB[U*N.:R+OTt@[
Jd%VIk^T7Tis)=ah?AK7Y6EF*["$C+\H^1Z^')CY_Zdi*aFCf+bm(TZdKHfYf*/7*gjc4+i<H"Zjoh4Y
lNNZ*n:-W*o`^?YJcu)VLO]:,M?WeYJcq;@msgaTl33a_jTL/<W!%m*qur#_pB-!LQ36N(Rt'W*TEX?X
Jci"Tfmg2Te-32_cNAb$^&u?(_gfH)a99*WJcjF'Z%(ATX9@;]VZVMQjo_0(l[P9)n-"pWJckiOM1>PT
LBRSYJch&9oRE*Tmf]$]l2uV?UBBG(W.0R*qu_NQOTY0(Q@J9)RfqpWJchhOhLDPTf`\J]e,t:)\HC!(
^44*)_Z[aWJcj7"[XZ_TYlrY]X94%Vi<,g(k'rp(JcgT,o`L5(qL=>(Jcgl4q1"HToE0[IJchSHjaX%T
hufn[Jcgr6pOA<TncOIGJchYJj+!nTh?/?3Jci@^c[WKTaof?[`<*pY^]VX[]78(T[KFq[Yl`MYX975[
VgmZTU''N[SHA*YQilg[PCN7TNWOe6K`_7'MLYF'Jc^N*R0)Z'Sq#i'Jc_kPLB@C'N.:R'Jc^N*Rf_f'
TRYu'Jc^N*Y6*4'["$C'Jc^N*_ZIW'aFCf'Jc^N*f)i%'gjah~>

%%EndBinary
grestore
np
142.46 42.0731 mo
142.416 42.0462 142.373 42.0191 142.33 41.9916 cv
142.33 41.6824 li
142.373 41.7106 142.417 41.7385 142.46 41.7662 cv
142.46 42.0731 li
171.36 29.686 mo
171.1 29.686 li
171.1 29.556 li
171.36 29.556 li
171.36 29.686 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
141.02 43.486 mo
141.02 28.246 li
170.07 28.246 li
170.07 43.486 li
165.66 40.586 159.95 40.586 155.55 43.486 cv
151.14 46.396 145.43 46.396 141.02 43.486 cv
eclp
140.27 46.416 mo
170.814 46.416 li
170.814 27.49 li
140.27 27.49 li
cp
level3{
gsave
[1 0 0 -1 0 418.966 ]ct
<<
/PatternType 2
/Shading
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [155.55 372.55 155.55 391.47 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /5 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
155.55 372.55 155.55 391.47 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/5 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
141.02 43.486 mo
141.02 28.246 li
170.07 28.246 li
170.07 43.486 li
165.66 40.586 159.95 40.586 155.55 43.486 cv
151.14 46.396 145.43 46.396 141.02 43.486 cv
cp
1 /1 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: PBAAAA+CALIBRI Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+CALIBRI
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e4b978000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966b942be39000085c8000021ee68656164e625fe3d00000f640000
0036686865610dad06da00000f9c00000024686d747874770c8600000fc0
000025766c6f6361ab82a4e40000353800001e466d617870212d24a10000
5380000000206e616d65267651f4000053a000000e16707265706baf02fe
000061b800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
00a00600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb87401c1745f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000399040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000045a00ac000000000000
000000000000000000000000000000000000000000000000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000056200630000000000000000000000000000000003ad
0047000000000000000000000000000000000000000003e6000f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000043400990362005a000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000002710025
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001d6009900000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000321005100000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004340094000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000005b80035000000000000000000000000000000000377
0029039f0022000000000000000000000000000000000329005900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a10157015701570157015701570157015701570157
015701d301d301d301d301d301d301d301d301d301d3023c023c023c023c
023c023c023c023c023c023c023c023c023c023c023c023c023c023c023c
023c023c023c023c023c023c023c023c023c023c023c02e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e90384038403840384038404560456045604560456045604bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd04bd
04bd04bd04bd04bd04bd04bd056c056c056c056c056c056c056c056c056c
056c056c056c056c06050691069106910691069106910691069106910691
072807280728072807c907c907c907c907c907c907c907c907c907c9084c
084c084c084c084c084c084c084c084c084c084c084c084c084c084c084c
084c084c084c084c084c084c084c084c084c084c084c084c084c084c084c
084c084c084c084c084c084c084c084c084c093909390939093909390939
093909390939093909390939093909b209b209b209b209b209b209b209b2
09b209b209b209b209b209b209b209b209b209b209f509f509f509f509f5
09f50ad60b670b670b670b670b670b670b670bf50bf50bf50bf50bf50bf5
0bf50bf50bf50bf50bf50bf50bf50bf50bf50c6e0c6e0c6e0c6e0d340d34
0d340d340d340d340d340d340d340d340db00db00db00db00db00db00db0
0db00db00db00db00db00db00db00db00db00db00db00db00db00db00db0
0db00db00db00db00db00e400e400e400e400e400e400e400e400e400e40
0e400e400f180f180f180f180f180fa8100d100d100d100d100d106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c106c106c106c106c106c106c106c106c106c106c
106c106c106c106c106c10b110b110b110b110b110b110b110b110b110b1
10b110b110b110b110b110b110b110b110b110b110b110b110b110b110b1
10b110b110b110b110b110b110b110b110b110b110b110b110b110b110b1
10b110b110b110b110b110b110b110b110b110b110b110b110b110b110b1
10b110b110b110b110b110b110b110b110b110b110b110b110b110b110b1
10b110b110b110b110b110b110b110f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f710f710f710f710f710f710f710f710f7
10f710f710f710f710f710f710f70000000100000f220060000500000000
00020010002f0065000011902410000000000000002d0222000000030000
0000006400000000000300000001000e00640000000300000002000e0304
0000000300000003003003120000000300000004000e0064000000030000
0005001803420000000300000006000e0064000000030000000700fa035a
0000000300000008002a03d0000000030000000900200454000000030000
000a02a00064000000030000000b00560474000000030000000c002a04ca
000000030000000d029804f4000000030000000e006c078c000100000000
0000003207f800010000000000010007082a00010000000000020007097a
00010000000000030018098100010000000000040007082a000100000000
0005000c099900010000000000060007082a0001000000000007007d09a5
0001000000000008001509e0000100000000000900100a22000100000000
000a0150082a000100000000000b002b0a32000100000000000c00150a5d
000100000000000d014c0a72000100000000000e00360bbe000300010409
0000006400000003000104090001000e00640003000104090002000e0304
0003000104090003003003120003000104090004000e0064000300010409
0005001803420003000104090006000e0064000300010409000700fa035a
0003000104090008002a03d0000300010409000900200454000300010409
000a02a00064000300010409000b00560474000300010409000c002a04ca
000300010409000d029804f4000300010409000e006c078c00a900200032
0030003000380020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000610020
006d006f006400650072006e002000730061006e00730020007300650072
00690066002000660061006d0069006c0079002000770069007400680020
0073007500620074006c006500200072006f0075006e00640069006e0067
00730020006f006e0020007300740065006d007300200061006e00640020
0063006f0072006e006500720073002e0020004900740020006600650061
007400750072006500730020007200650061006c0020006900740061006c
006900630073002c00200073006d0061006c006c00200063006100700073
002c00200061006e00640020006d0075006c007400690070006c00650020
006e0075006d006500720061006c00200073006500740073002e00200049
00740073002000700072006f0070006f007200740069006f006e00730020
0061006c006c006f00770020006800690067006800200069006d00700061
0063007400200069006e002000740069006700680074006c007900200073
006500740020006c0069006e006500730020006f00660020006200690067
00200061006e006400200073006d0061006c006c00200074006500780074
00200061006c0069006b0065002e002000430061006c0069006200720069
002700730020006d0061006e007900200063007500720076006500730020
0061006e006400200074006800650020006e006500770020007200610073
00740065007200690073006500720020007400650061006d002000750070
00200069006e0020006200690067006700650072002000730069007a0065
007300200074006f002000720065007600650061006c0020006100200077
00610072006d00200061006e006400200073006f00660074002000630068
0061007200610063007400650072002e0052006500670075006c00610072
004d006900630072006f0073006f00660074003a002000430061006c0069
006200720069003a0020003200300030003500560065007200730069006f
006e00200035002e0036003200430061006c006900620072006900200069
007300200065006900740068006500720020006100200072006500670069
007300740065007200650064002000740072006100640065006d00610072
006b0020006f007200200061002000740072006100640065006d00610072
006b0020006f00660020004d006900630072006f0073006f006600740020
0043006f00720070006f0072006100740069006f006e00200069006e0020
00740068006500200055006e006900740065006400200053007400610074
0065007300200061006e0064002f006f00720020006f0074006800650072
00200063006f0075006e00740072006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303038
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c696272693a203230303556657273696f6e2035
2e363243616c696272692069732065697468657220612072656769737465
7265642074726164656d61726b206f7220612074726164656d61726b206f
66204d6963726f736f667420436f72706f726174696f6e20696e20746865
20556e697465642053746174657320616e642f6f72206f7468657220636f
756e74726965732e4c7563286173292064652047726f6f74687474703a2f
2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068792f
6374666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f
75206d617920757365207468697320666f6e74206173207065726d697474
6564206279207468652045554c4120666f72207468652070726f64756374
20696e207768696368207468697320666f6e7420697320696e636c756465
6420746f20646973706c617920616e64207072696e7420636f6e74656e74
2e20596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f666f6e74732f64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[8687 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 1490 89 <00020063ff41058705210027003b008e401d0a2112281810014d28100f01
4d28140d014d28120c014d28180b014d28b80232400a00201c301c801c03
1c32b8ffe8b310014d32b8fff0b30f014d32b8ffecb30d014d32b8ffeeb3
0c014d32b8ffe8b30b014d32b80233b412210a0d2db80129b41753250437
b8012bb10d56003fedd4cd3fed123939012fe12b2b2b2b2bd45dc4e12b2b
2b2b2b123939313005140e0223222e0227060623222e0235343e0233321e
0215140e02071e0501342e0223220e0215141e0233323e020587050a0c06
145974843e31966392d58b444a94de948bd38f4813293e2a496e48281408
feac275b987070985f29265a9772719a5e2872171f1106213f5a3c1e2c56
a6f7a09af9af5f56a5f29d519484702d3c43220f132302e06ebc8b4e538d
ba6872bf8c4d548fbd00>PBAAAA+CALIBRI AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/Q 89 def
end
PBAAAA+CALIBRI /Encoding get
dup 81 /Q put
pop
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI /PBAAAA+CALIBRI findfont ct_VMDictPut
/FBYCQL+CALIBRI*1 
[81{/.notdef}rp /Q 174{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
147.39 36.576 mo
(Q)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 7008 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/u 437 def
end
PBAAAA+CALIBRI /Encoding get
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[81{/.notdef}rp /Q 35{/.notdef}rp /u 138{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
151.427 36.576 mo
(u)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 3664 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/e 286 def
end
PBAAAA+CALIBRI /Encoding get
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[81{/.notdef}rp /Q 19{/.notdef}rp /e 15{/.notdef}rp /u 138{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
154.579 36.576 mo
(e)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
157.564 36.576 mo
(u)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
160.717 36.576 mo
(e)sh
gsave
137.49 105.516 mo
179.983 105.516 li
179.983 47.9367 li
137.49 47.9367 li
137.49 105.516 li
clp
gsave
137.589 105.547 mo
180.04 105.547 li
180.04 48.1356 li
137.589 48.1356 li
137.589 105.547 li
eclp
137.49 51.7235 mo
144.663 51.7235 li
144.663 47.9366 li
137.49 47.9366 li
cp
.985718 .81619 .255375 .619593 cmyk
ef
165.791 51.7235 mo
172.967 51.7235 li
172.967 47.9366 li
165.791 47.9366 li
cp
ef
144.567 55.3124 mo
158.816 55.3124 li
158.816 51.5255 li
144.567 51.5255 li
cp
ef
144.567 58.9013 mo
180.04 58.9013 li
180.04 55.1143 li
144.567 55.1143 li
cp
ef
151.641 62.4902 mo
158.816 62.4902 li
158.816 58.7001 li
151.641 58.7001 li
cp
ef
151.641 66.0754 mo
172.966 66.0754 li
172.966 62.2884 li
151.641 62.2884 li
cp
ef
151.641 69.6642 mo
158.816 69.6642 li
158.816 65.8773 li
151.641 65.8773 li
cp
ef
172.867 69.6642 mo
180.04 69.6642 li
180.04 65.8773 li
172.867 65.8773 li
cp
ef
137.49 73.2531 mo
144.663 73.2531 li
144.663 69.4662 li
137.49 69.4662 li
cp
ef
151.641 73.2531 mo
158.816 73.2531 li
158.816 69.4662 li
151.641 69.4662 li
cp
ef
172.867 73.2531 mo
180.04 73.2531 li
180.04 69.4662 li
172.867 69.4662 li
cp
ef
144.567 76.842 mo
158.816 76.842 li
158.816 73.0551 li
144.567 73.0551 li
cp
ef
165.791 76.842 mo
180.041 76.842 li
180.041 73.0551 li
165.791 73.0551 li
cp
ef
151.641 80.4309 mo
158.816 80.4309 li
158.816 76.644 li
151.641 76.644 li
cp
ef
172.867 80.4309 mo
180.04 80.4309 li
180.04 76.644 li
172.867 76.644 li
cp
ef
144.567 84.0198 mo
151.739 84.0198 li
151.739 80.2297 li
144.567 80.2297 li
cp
ef
158.717 84.0198 mo
165.889 84.0198 li
165.889 80.2297 li
158.717 80.2297 li
cp
ef
172.867 84.0198 mo
180.04 84.0198 li
180.04 80.2297 li
172.867 80.2297 li
cp
ef
144.567 91.1938 mo
172.967 91.1938 li
172.967 87.4069 li
144.567 87.4069 li
cp
ef
137.49 94.7832 mo
165.89 94.7832 li
165.89 90.9963 li
137.49 90.9963 li
cp
ef
144.567 98.372 mo
172.967 98.372 li
172.967 94.585 li
144.567 94.585 li
cp
ef
137.49 101.961 mo
165.89 101.961 li
165.89 98.1708 li
137.49 98.1708 li
cp
ef
172.867 105.547 mo
180.04 105.547 li
180.04 101.76 li
172.867 101.76 li
cp
ef
grestore
gsave
137.49 105.547 mo
180.04 105.547 li
180.04 47.9363 li
137.49 47.9363 li
137.49 105.547 li
eclp
137.651 47.9986 mo
180.006 47.9986 li
.79995 lw
2 lc
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 48.1346 mo
180.04 48.1346 li
180.04 47.9365 li
137.589 47.9365 li
cp
ef
137.651 51.5874 mo
180.006 51.5874 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 51.7235 mo
180.04 51.7235 li
180.04 51.5253 li
137.589 51.5253 li
cp
ef
137.651 55.1763 mo
180.006 55.1763 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 55.3124 mo
180.04 55.3124 li
180.04 55.1142 li
137.589 55.1142 li
cp
ef
137.651 58.7615 mo
180.006 58.7615 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 58.9013 mo
180.04 58.9013 li
180.04 58.7 li
137.589 58.7 li
cp
ef
137.651 62.3504 mo
180.006 62.3504 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 62.4902 mo
180.04 62.4902 li
180.04 62.2889 li
137.589 62.2889 li
cp
ef
137.651 65.9393 mo
180.006 65.9393 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 66.0754 mo
180.04 66.0754 li
180.04 65.8772 li
137.589 65.8772 li
cp
ef
137.651 69.5282 mo
180.006 69.5282 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 69.6642 mo
180.04 69.6642 li
180.04 69.4661 li
137.589 69.4661 li
cp
ef
137.651 73.117 mo
180.006 73.117 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 73.2531 mo
180.04 73.2531 li
180.04 73.055 li
137.589 73.055 li
cp
ef
137.651 76.7059 mo
180.006 76.7059 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 76.842 mo
180.04 76.842 li
180.04 76.6438 li
137.589 76.6438 li
cp
ef
137.651 80.2923 mo
180.006 80.2923 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 80.4309 mo
180.04 80.4309 li
180.04 80.2296 li
137.589 80.2296 li
cp
ef
137.651 83.88 mo
180.006 83.88 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 84.0198 mo
180.04 84.0198 li
180.04 83.8185 li
137.589 83.8185 li
cp
ef
137.651 87.4689 mo
180.006 87.4689 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 87.6062 mo
180.04 87.6062 li
180.04 87.408 li
137.589 87.408 li
cp
ef
137.651 91.0578 mo
180.006 91.0578 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 91.1938 mo
180.04 91.1938 li
180.04 90.9957 li
137.589 90.9957 li
cp
ef
137.651 94.647 mo
180.006 94.647 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 94.7832 mo
180.04 94.7832 li
180.04 94.5851 li
137.589 94.5851 li
cp
ef
137.651 98.2327 mo
180.006 98.2327 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 98.372 mo
180.04 98.372 li
180.04 98.1707 li
137.589 98.1707 li
cp
ef
137.651 101.821 mo
180.006 101.821 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 101.961 mo
180.04 101.961 li
180.04 101.76 li
137.589 101.76 li
cp
ef
137.552 47.9986 mo
137.552 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.49 105.547 mo
137.589 105.547 li
137.589 47.9363 li
137.49 47.9363 li
cp
ef
144.628 48.1965 mo
144.628 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
144.567 105.547 mo
144.663 105.547 li
144.663 48.1355 li
144.567 48.1355 li
cp
ef
151.702 48.1965 mo
151.702 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
151.641 105.547 mo
151.74 105.547 li
151.74 48.1355 li
151.641 48.1355 li
cp
ef
158.778 48.1965 mo
158.778 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
158.717 105.547 mo
158.816 105.547 li
158.816 48.1355 li
158.717 48.1355 li
cp
ef
165.853 48.1965 mo
165.853 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
165.791 105.547 mo
165.89 105.547 li
165.89 48.1355 li
165.791 48.1355 li
cp
ef
172.929 48.1965 mo
172.929 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
172.867 105.547 mo
172.966 105.547 li
172.966 48.1355 li
172.867 48.1355 li
cp
ef
137.651 105.41 mo
180.006 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
137.589 105.547 mo
180.04 105.547 li
180.04 105.348 li
137.589 105.348 li
cp
ef
180.006 48.1965 mo
180.006 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
179.945 105.547 mo
180.04 105.547 li
180.04 48.1355 li
179.945 48.1355 li
cp
ef
137.552 105.608 mo
137.552 105.608 li
.171145 .10779 .0380865 0 cmyk
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
144.628 105.608 mo
144.628 105.608 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
151.702 105.608 mo
151.702 105.608 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
158.778 105.608 mo
158.778 105.608 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
165.853 105.608 mo
165.853 105.608 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
172.929 105.608 mo
172.929 105.608 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.006 105.608 mo
180.006 105.608 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 47.9986 mo
180.102 47.9986 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 51.5874 mo
180.102 51.5874 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 55.1763 mo
180.102 55.1763 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 58.7615 mo
180.102 58.7615 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 62.3504 mo
180.102 62.3504 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 65.9393 mo
180.102 65.9393 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 69.5282 mo
180.102 69.5282 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 73.117 mo
180.102 73.117 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 76.7059 mo
180.102 76.7059 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 80.2923 mo
180.102 80.2923 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 83.88 mo
180.102 83.88 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 87.4689 mo
180.102 87.4689 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 91.0578 mo
180.102 91.0578 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 94.647 mo
180.102 94.647 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 98.2327 mo
180.102 98.2327 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 101.821 mo
180.102 101.821 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
180.102 105.41 mo
180.102 105.41 li
gsave
[.123619 0 0 -.123712 137.49 105.516 ]ct
@
grestore newpath
grestore
grestore
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 934 38 <000100acfffa0354050e0027005cb10713b8ffe8b310014d13b8fff0b30f
014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d13b80211
b50d1d001e1d07b8010cb313131906b80128b322511955003f3fed12392f
ed012f2fc41139e12b2b2b2b2b32313001140e0223211121321e0215140e
02232111140e0223222e02351134363321321e020354040a0d07fe2601c0
070d0a04040a0d07fe400814201a1822140829170246070d0a0404c4131c
1108fe4807101b15131b1109fde5070d070505070d0704ae271f08121d00
>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/F 38 def
end
PBAAAA+CALIBRI /Encoding get
dup 70 /F put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[70{/.notdef}rp /F 10{/.notdef}rp /Q 19{/.notdef}rp /e 15{/.notdef}rp /u 
138{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
134.89 9.23599 mo
(F)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
138.566 9.23599 mo
(u)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 8218 460 <00010059000002d703b7002b003bb90010fff040160c0d014c26100c0d01
4c2f0001003409440902092511b80102b319480f27b80102b1054b003fed
323fed32012f5dcd5d31302b2b25140e02232122263535343e0237012122
2635343e023321321e021515140e02070121321e0202d706080e08fdd615
1b04080e0a018dfe7f101304090d0902040b110c0704080e0afe7501a608
0d090646131b11071c21220e16161910026a2125121b1107060e1611200e
18171a10fd9607101b00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/z 460 def
end
PBAAAA+CALIBRI /Encoding get
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[70{/.notdef}rp /F 10{/.notdef}rp /Q 19{/.notdef}rp /e 15{/.notdef}rp /u 
4{/.notdef}rp /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
142.769 9.23599 mo
(z)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
145.929 9.23599 mo
(z)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 4722 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/i 349 def
end
PBAAAA+CALIBRI /Encoding get
dup 105 /i put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[70{/.notdef}rp /F 10{/.notdef}rp /Q 19{/.notdef}rp /e 3{/.notdef}rp /i 
11{/.notdef}rp /u 4{/.notdef}rp /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
149.089 9.23599 mo
(i)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 5548 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/n 374 def
end
PBAAAA+CALIBRI /Encoding get
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[70{/.notdef}rp /F 10{/.notdef}rp /Q 19{/.notdef}rp /e 3{/.notdef}rp /i 
4{/.notdef}rp /n 6{/.notdef}rp /u 4{/.notdef}rp /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
150.925 9.23599 mo
(n)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 4248 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/g 336 def
end
PBAAAA+CALIBRI /Encoding get
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[70{/.notdef}rp /F 10{/.notdef}rp /Q 19{/.notdef}rp /e /.notdef /g 
/.notdef /i 4{/.notdef}rp /n 6{/.notdef}rp /u 4{/.notdef}rp /z 
133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
155.128 9.23599 mo
(g)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if

2 0 3 <> PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/space 3 def
end
PBAAAA+CALIBRI /Encoding get
dup 32 /space put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 37{/.notdef}rp /F 10{/.notdef}rp /Q 19{/.notdef}rp /e 
/.notdef /g /.notdef /i 4{/.notdef}rp /n 6{/.notdef}rp /u 
4{/.notdef}rp /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
158.894 9.23599 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 686 28 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/E 28 def
end
PBAAAA+CALIBRI /Encoding get
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q 19{/.notdef}rp 
/e /.notdef /g /.notdef /i 4{/.notdef}rp /n 6{/.notdef}rp 
/u 4{/.notdef}rp /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
160.702 9.23599 mo
(E)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
164.609 9.23599 mo
(n)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
168.812 9.23599 mo
(g)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
172.577 9.23599 mo
(i)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
174.413 9.23599 mo
(n)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
178.616 9.23599 mo
(e)sh
gsave
350.1 110.316 mo
278.25 110.316 li
278.25 18.126 li
350.1 18.126 li
350.1 110.316 li
clp
278.25 18.126 mo
350.1 18.126 li
350.1 110.316 li
278.25 110.316 li
cp
1 /0 /CSD get_res sepcs
.498039 sep
f
grestore
gsave
278.25 18.126 mo
278.25 110.316 li
350.1 110.316 li
350.1 18.126 li
278.25 18.126 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
350.104 110.446 mo
278.25 110.446 li
278.158 110.408 li
278.12 110.316 li
278.25 110.316 li
278.12 110.316 li
278.12 18.119 li
278.158 18.027 li
278.25 17.9891 li
350.104 17.9891 li
350.196 18.027 li
350.234 18.119 li
350.234 110.316 li
350.196 110.408 li
350.104 110.446 li
350.1 110.316 mo
350.104 110.316 li
350.104 18.119 li
278.25 18.119 li
278.25 110.316 li
350.1 110.316 li
1 /0 /CSD get_res sepcs
.498039 sep
f
350.104 110.316 mo
350.1 110.316 li
350.1 18.126 li
278.25 18.126 li
278.25 110.316 li
278.25 18.119 li
350.104 18.119 li
350.104 110.316 li
1 /0 /CSD get_res sepcs
.74902 sep
f
grestore
gsave
276.81 108.876 mo
348.664 108.876 li
348.664 16.679 li
276.81 16.679 li
276.81 108.876 li
eclp
276.06 109.626 mo
349.414 109.626 li
349.414 15.929 li
276.06 15.929 li
cp
level3{
gsave
[1 0 0 -1 0 418.966 ]ct
<<
/PatternType 2
/Shading
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [312.73 309.34 312.73 403.03 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'*BN\'*BN\'*BK['*BK['*BK['*BK['*BHZ&d'?Y&d'?Y&d'?Y&d'<X&d'<X&d'<X&d'<X&cs6W&cs3V
&cs3V&HX*U&HX*U&HX'T&HX'T&HX'T&HX'T&HX'T&HX$S&HX$S&-<pR&-<pR&-<pR&-<mQ&-<mQ&-<mQ
&-<mQ&-<jP&-<jP%g!aO%g!aO%g!aO%g!^N%g!^N%g!^N%g!^N%g!^N%g![M%K[RL%K[RL%K[RL%K[RL
%K[RL%K[OK%K[OK%K[OK%K[OK%K[OK%0@CI%0@CI%0@CI%0@CI%0@@H%0@@H%0@@H%0@@H%0@@H$j%4F
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /6 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eP]f&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te
&J5Te&J5Qc&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0]%hB0]%hB0]%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
~>
<~,U=W\,U=W\,U4NY,9nEX,9nEX,9nEX,9e<U+sJ3T+sJ3T+sJ3T+sA*Q+X&!P+X&!P+X&!P+X&!P+WqmM
+<VdL+<VdL+<VdL+<VaJ+!2RH+!2RH+!2RH+!2RH+!2OF*Zc@D*Zc@D*Zc@D*Zc@D*Zc=B*??.@*??.@
*??.@*??.?*#oq<*#oq<*#oq<*#oq<*#oq;)]K_8)]K_8)]K_8)]K_8)]K_7)B'M4)B'M4)B'M4)B'M4
)B'M4)B'M4)&X;0)&X;0)&X;0)&X;0)&X;0(`4),(`4),(`4),(`4),(Ddl((Ddl((Ddl((Ddl((Ddl(
~>
0 ]
>>
312.73 309.34 312.73 403.03 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/6 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
276.81 108.876 mo
348.664 108.876 li
348.664 16.679 li
276.81 16.679 li
cp
@
.72 lw
314.44 26.036 mo
299.69 35.596 li
.0104372 .340703 .569909 0 cmyk
@
301.05 34.716 mo
300.57 33.966 299.56 33.746 298.81 34.236 cv
298.06 34.716 297.85 35.726 298.34 36.476 cv
298.82 37.226 299.82 37.436 300.58 36.956 cv
301.33 36.466 301.54 35.466 301.05 34.716 cv
cp
ef
299.97 35.386 mo
290.57 50.366 li
1 /1 /CSD get_res sepcs
.149 sep
@
291.43 48.996 mo
290.67 48.516 289.67 48.746 289.19 49.506 cv
288.72 50.266 288.95 51.256 289.7 51.736 cv
290.46 52.216 291.46 51.986 291.94 51.226 cv
292.41 50.466 292.18 49.466 291.43 48.996 cv
cp
ef
299.77 35.696 mo
306.01 50.366 li
.0104372 .340703 .569909 0 cmyk
@
305.38 48.876 mo
304.56 49.226 304.17 50.176 304.52 50.996 cv
304.87 51.826 305.83 52.206 306.65 51.856 cv
307.47 51.506 307.86 50.556 307.51 49.726 cv
307.15 48.906 306.2 48.526 305.38 48.876 cv
cp
ef
290.57 50.366 mo
294.78 64.266 li
1 /1 /CSD get_res sepcs
.149 sep
@
294.31 62.716 mo
293.45 62.976 292.97 63.876 293.23 64.736 cv
293.49 65.596 294.39 66.076 295.25 65.816 cv
296.11 65.556 296.59 64.656 296.33 63.796 cv
296.07 62.936 295.17 62.456 294.31 62.716 cv
cp
ef
290.57 50.366 mo
284.95 64.266 li
@
285.55 62.766 mo
284.73 62.426 283.78 62.826 283.45 63.656 cv
283.11 64.486 283.51 65.436 284.34 65.766 cv
285.17 66.106 286.11 65.706 286.45 64.876 cv
286.79 64.046 286.38 63.096 285.55 62.766 cv
cp
ef
314.44 26.036 mo
329.46 35.386 li
.0104372 .340703 .569909 0 cmyk
@
328.09 34.526 mo
327.61 35.286 327.85 36.286 328.61 36.756 cv
329.37 37.226 330.36 36.996 330.84 36.236 cv
331.31 35.476 331.08 34.476 330.32 34.006 cv
329.56 33.536 328.56 33.766 328.09 34.526 cv
cp
ef
304.61 78.166 mo
298.99 92.066 li
1 /1 /CSD get_res sepcs
.149 sep
@
299.6 90.566 mo
298.77 90.236 297.83 90.636 297.49 91.466 cv
297.16 92.296 297.56 93.236 298.39 93.576 cv
299.21 93.906 300.16 93.506 300.49 92.676 cv
300.83 91.846 300.43 90.906 299.6 90.566 cv
cp
ef
324.32 64.596 mo
320.06 78.166 li
@
320.54 76.626 mo
319.69 76.356 318.78 76.826 318.51 77.686 cv
318.25 78.536 318.72 79.446 319.57 79.716 cv
320.43 79.986 321.34 79.506 321.6 78.656 cv
321.87 77.796 321.4 76.886 320.54 76.626 cv
cp
ef
304.5 78.496 mo
308.82 92.066 li
.0104372 .340703 .569909 0 cmyk
@
308.33 90.526 mo
307.48 90.796 307.01 91.706 307.28 92.566 cv
307.55 93.416 308.46 93.886 309.32 93.616 cv
310.17 93.346 310.64 92.426 310.37 91.576 cv
310.09 90.726 309.18 90.256 308.33 90.526 cv
cp
ef
324.27 64.246 mo
328.49 78.166 li
1 /1 /CSD get_res sepcs
.149 sep
@
328.02 76.616 mo
327.16 76.876 326.68 77.786 326.94 78.636 cv
327.19 79.496 328.1 79.976 328.96 79.716 cv
329.81 79.456 330.3 78.556 330.04 77.696 cv
329.78 76.846 328.87 76.356 328.02 76.616 cv
cp
ef
339.72 64.266 mo
334.1 78.166 li
@
334.71 76.666 mo
333.88 76.326 332.94 76.736 332.6 77.556 cv
332.27 78.386 332.67 79.336 333.5 79.666 cv
334.33 80.006 335.27 79.606 335.61 78.776 cv
335.94 77.946 335.54 77.006 334.71 76.666 cv
cp
ef
306.01 50.366 mo
310.23 64.266 li
@
309.76 62.716 mo
308.9 62.976 308.42 63.876 308.68 64.736 cv
308.94 65.596 309.84 66.076 310.7 65.816 cv
311.55 65.556 312.04 64.656 311.78 63.796 cv
311.52 62.936 310.61 62.456 309.76 62.716 cv
cp
ef
306.01 50.366 mo
300.4 64.266 li
.0104372 .340703 .569909 0 cmyk
@
301 62.766 mo
300.17 62.426 299.23 62.826 298.89 63.656 cv
298.56 64.486 298.96 65.436 299.79 65.766 cv
300.62 66.106 301.56 65.706 301.9 64.876 cv
302.23 64.046 301.83 63.096 301 62.766 cv
cp
ef
329.46 35.386 mo
320.06 50.366 li
1 /1 /CSD get_res sepcs
.149 sep
@
320.92 48.996 mo
320.16 48.516 319.16 48.746 318.69 49.506 cv
318.21 50.266 318.44 51.256 319.2 51.736 cv
319.96 52.216 320.96 51.986 321.43 51.226 cv
321.91 50.466 321.68 49.466 320.92 48.996 cv
cp
ef
1 lw
329.26 35.696 mo
335.51 50.366 li
.0104372 .340703 .569909 0 cmyk
@
334.79 48.676 mo
333.86 49.076 333.43 50.156 333.82 51.086 cv
334.22 52.016 335.29 52.446 336.22 52.046 cv
337.15 51.656 337.59 50.576 337.19 49.646 cv
336.8 48.716 335.72 48.286 334.79 48.676 cv
cp
ef
.72 lw
320.06 50.366 mo
324.27 64.266 li
1 /1 /CSD get_res sepcs
.149 sep
@
323.8 62.716 mo
322.95 62.976 322.46 63.876 322.72 64.736 cv
322.98 65.596 323.89 66.076 324.74 65.816 cv
325.6 65.556 326.08 64.656 325.82 63.796 cv
325.56 62.936 324.66 62.456 323.8 62.716 cv
cp
ef
320.06 50.366 mo
314.44 64.266 li
@
315.05 62.766 mo
314.22 62.426 313.27 62.826 312.94 63.656 cv
312.6 64.486 313 65.436 313.83 65.766 cv
314.66 66.106 315.61 65.706 315.94 64.876 cv
316.28 64.046 315.88 63.096 315.05 62.766 cv
cp
ef
335.51 50.366 mo
339.72 64.266 li
@
339.25 62.716 mo
338.4 62.976 337.91 63.876 338.17 64.736 cv
338.43 65.596 339.33 66.076 340.19 65.816 cv
341.05 65.556 341.53 64.656 341.27 63.796 cv
341.01 62.936 340.11 62.456 339.25 62.716 cv
cp
ef
335.51 50.366 mo
329.89 64.266 li
.0104372 .340703 .569909 0 cmyk
@
330.5 62.766 mo
329.67 62.426 328.72 62.826 328.39 63.656 cv
328.05 64.486 328.45 65.436 329.28 65.766 cv
330.11 66.106 331.06 65.706 331.39 64.876 cv
331.73 64.046 331.33 63.096 330.5 62.766 cv
cp
ef
300.4 64.266 mo
304.61 78.166 li
@
304.14 76.616 mo
303.28 76.876 302.8 77.786 303.06 78.636 cv
303.32 79.496 304.22 79.976 305.08 79.716 cv
305.94 79.456 306.42 78.556 306.16 77.696 cv
305.9 76.846 305 76.356 304.14 76.616 cv
cp
ef
300.4 64.266 mo
294.78 78.166 li
@
295.39 76.666 mo
294.56 76.326 293.61 76.736 293.28 77.556 cv
292.94 78.386 293.34 79.336 294.17 79.666 cv
295 80.006 295.95 79.606 296.28 78.776 cv
296.62 77.946 296.22 77.006 295.39 76.666 cv
cp
ef
320.11 78.506 mo
315.85 92.066 li
1 /1 /CSD get_res sepcs
.149 sep
@
316.33 90.526 mo
315.48 90.256 314.57 90.726 314.3 91.586 cv
314.03 92.436 314.51 93.346 315.36 93.616 cv
316.21 93.886 317.12 93.406 317.39 92.556 cv
317.66 91.706 317.18 90.796 316.33 90.526 cv
cp
ef
320.05 78.156 mo
324.27 92.066 li
@
323.8 90.516 mo
322.95 90.776 322.46 91.686 322.72 92.536 cv
322.98 93.396 323.89 93.876 324.74 93.616 cv
325.6 93.356 326.08 92.456 325.82 91.596 cv
325.56 90.746 324.66 90.256 323.8 90.516 cv
cp
ef
339.72 64.266 mo
342.53 78.166 li
@
342.21 76.576 mo
341.33 76.756 340.77 77.616 340.94 78.486 cv
341.12 79.366 341.97 79.936 342.85 79.756 cv
343.73 79.576 344.3 78.726 344.12 77.846 cv
343.94 76.966 343.09 76.406 342.21 76.576 cv
cp
ef
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 1800 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/S 94 def
end
PBAAAA+CALIBRI /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 17{/.notdef}rp /e /.notdef /g /.notdef /i 4{/.notdef}rp 
/n 6{/.notdef}rp /u 4{/.notdef}rp /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
270.91 9.23599 mo
(S)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 8016 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/y 455 def
end
PBAAAA+CALIBRI /Encoding get
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 17{/.notdef}rp /e /.notdef /g /.notdef /i 4{/.notdef}rp 
/n 6{/.notdef}rp /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
274.586 9.23599 mo
(y)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 5098 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/m 373 def
end
PBAAAA+CALIBRI /Encoding get
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 17{/.notdef}rp /e /.notdef /g /.notdef /i 3{/.notdef}rp 
/m /n 6{/.notdef}rp /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
278.207 9.23599 mo
(m)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 2776 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/b 271 def
end
PBAAAA+CALIBRI /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 14{/.notdef}rp /b 2{/.notdef}rp /e /.notdef /g /.notdef 
/i 3{/.notdef}rp /m /n 6{/.notdef}rp /u 3{/.notdef}rp /y 
/z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
284.597 9.23599 mo
(b)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 5838 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/o 381 def
end
PBAAAA+CALIBRI /Encoding get
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 14{/.notdef}rp /b 2{/.notdef}rp /e /.notdef /g /.notdef 
/i 3{/.notdef}rp /m /n /o 5{/.notdef}rp /u 3{/.notdef}rp 
/y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
288.8 9.23599 mo
(o)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 4964 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/l 367 def
end
PBAAAA+CALIBRI /Encoding get
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 14{/.notdef}rp /b 2{/.notdef}rp /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /n /o 5{/.notdef}rp /u 
3{/.notdef}rp /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
293.019 9.23599 mo
(l)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
294.855 9.23599 mo
(i)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 3082 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/c 272 def
end
PBAAAA+CALIBRI /Encoding get
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 14{/.notdef}rp /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o 5{/.notdef}rp 
/u 3{/.notdef}rp /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
296.691 9.23599 mo
(c)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
300.073 9.23599 mo
( )sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
301.882 9.23599 mo
(E)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 7728 454 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/x 454 def
end
PBAAAA+CALIBRI /Encoding get
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 14{/.notdef}rp /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o 5{/.notdef}rp 
/u 2{/.notdef}rp /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
305.788 9.23599 mo
(x)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
309.253 9.23599 mo
(e)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
313.233 9.23599 mo
(c)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
316.616 9.23599 mo
(u)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 6760 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/t 410 def
end
PBAAAA+CALIBRI /Encoding get
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S 14{/.notdef}rp /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o 4{/.notdef}rp 
/t /u 2{/.notdef}rp /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
320.819 9.23599 mo
(t)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
323.499 9.23599 mo
(i)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
325.335 9.23599 mo
(o)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
329.553 9.23599 mo
(n)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
333.756 9.23599 mo
( )sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
335.565 9.23599 mo
(E)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
339.471 9.23599 mo
(n)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
343.674 9.23599 mo
(g)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
347.44 9.23599 mo
(i)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
349.276 9.23599 mo
(n)sh
FBYCQL+CALIBRI*1 [7.99992 0 0 -7.99992 0 0 ]msf
353.479 9.23599 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 2220 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/T 100 def
end
PBAAAA+CALIBRI /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S /T 13{/.notdef}rp /b /c /.notdef /e /.notdef 
/g /.notdef /i 2{/.notdef}rp /l /m /n /o 
4{/.notdef}rp /t /u 2{/.notdef}rp /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
298.17 22.566 mo
(T)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 2426 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/a 258 def
end
PBAAAA+CALIBRI /Encoding get
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S /T 12{/.notdef}rp /a /b /c /.notdef /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n 
/o 4{/.notdef}rp /t /u 2{/.notdef}rp /x /y /z 
133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
301.094 22.566 mo
(a)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 6122 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/r 396 def
end
PBAAAA+CALIBRI /Encoding get
dup 114 /r put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 36{/.notdef}rp /E /F 10{/.notdef}rp /Q /.notdef 
/S /T 12{/.notdef}rp /a /b /c /.notdef /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n 
/o 2{/.notdef}rp /r /.notdef /t /u 2{/.notdef}rp /x 
/y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
303.968 22.566 mo
(r)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
306.06 22.566 mo
(g)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
308.884 22.566 mo
(e)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
311.869 22.566 mo
(t)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
313.879 22.566 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 322 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/B 17 def
end
PBAAAA+CALIBRI /Encoding get
dup 66 /B put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 2{/.notdef}rp /E /F 10{/.notdef}rp 
/Q /.notdef /S /T 12{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /.notdef /t /u 
2{/.notdef}rp /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
315.235 22.566 mo
(B)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
318.499 22.566 mo
(i)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
319.876 22.566 mo
(n)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
323.028 22.566 mo
(a)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
325.902 22.566 mo
(r)sh
1 /1 /CSD get_res sepcs
1 sep
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
327.994 22.566 mo
(y)sh
1 lw
301.65 35.066 mo
294.11 45.256 li
.886931 .751095 .521324 .735409 cmyk
@
291.91 48.226 mo
292.85 42.856 li
293.63 44.386 295.08 45.456 296.77 45.756 cv
291.91 48.226 li
cp
ef
303.91 79.916 mo
300.38 88.646 li
@
298.99 92.066 mo
298.56 86.626 li
299.69 87.916 301.37 88.596 303.08 88.456 cv
298.99 92.066 li
cp
ef
305.96 50.236 mo
309.15 60.736 li
@
310.23 64.266 mo
306.47 60.306 li
308.17 60.596 309.9 60.066 311.14 58.886 cv
310.23 64.266 li
cp
ef
314.87 26.036 mo
292.83 34.986 303.12 41.766 305.19 46.966 cv
308.1 54.306 294.7 58.526 306.45 86.596 cv
0 1 1 0 cmyk
@
308.63 91.466 mo
302.54 86.476 li
305.01 86.586 307.39 85.516 308.96 83.596 cv
308.63 91.466 li
cp
ef
1.2 lw
[8.4 6 ] 0 dsh
193.48 60.726 mo
271.18 60.696 li
1 /1 /CSD get_res sepcs
1 sep
@
276.81 60.686 mo
269.37 64.416 li
270.54 62.076 270.54 59.316 269.37 56.976 cv
276.81 60.686 li
cp
ef
211.235 55.726 mo
208.935 55.726 206.635 55.066 204.63 53.746 cv
204.63 39.876 li
231.05 39.876 li
231.05 53.746 li
229.045 52.426 226.745 51.7661 224.445 51.7661 cv
222.145 51.7661 219.845 52.426 217.84 53.746 cv
215.835 55.066 213.535 55.726 211.235 55.726 cv
1 /0 /CSD get_res sepcs
.498039 sep
f
gsave
204.63 39.876 mo
204.63 53.746 li
208.64 56.386 213.83 56.386 217.84 53.746 cv
221.85 51.1061 227.04 51.1061 231.05 53.746 cv
231.05 39.876 li
204.63 39.876 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
211.235 55.856 mo
208.91 55.856 206.585 55.1888 204.559 53.8546 cv
204.5 53.746 li
204.63 53.746 li
204.5 53.746 li
204.5 39.876 li
204.538 39.784 li
204.63 39.746 li
231.05 39.746 li
231.142 39.784 li
231.18 39.876 li
231.18 53.746 li
231.112 53.8605 li
230.979 53.8546 li
228.995 52.5489 226.72 51.8961 224.445 51.896 cv
222.17 51.8961 219.895 52.5489 217.911 53.8546 cv
215.885 55.1888 213.56 55.856 211.235 55.856 cv
204.63 53.746 mo
204.63 53.746 li
206.635 55.066 208.935 55.726 211.235 55.726 cv
213.535 55.726 215.835 55.066 217.84 53.746 cv
219.845 52.426 222.145 51.7661 224.445 51.7661 cv
226.745 51.7661 229.045 52.426 231.05 53.746 cv
231.05 39.876 li
204.63 39.876 li
204.63 53.746 li
204.63 53.746 li
f
grestore
gsave
203.19 52.306 mo
203.19 38.436 li
229.61 38.436 li
229.61 52.306 li
225.6 49.666 220.41 49.666 216.4 52.306 cv
212.39 54.9461 207.2 54.9461 203.19 52.306 cv
eclp
202.44 55.036 mo
230.354 55.036 li
230.354 37.688 li
202.44 37.688 li
cp
level3{
gsave
[1 0 0 -1 0 418.966 ]ct
<<
/PatternType 2
/Shading
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [216.4 363.93 216.4 381.28 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /7 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
216.4 363.93 216.4 381.28 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/7 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
.26 lw
[] 0 dsh
203.19 52.306 mo
203.19 38.436 li
229.61 38.436 li
229.61 52.306 li
225.6 49.666 220.41 49.666 216.4 52.306 cv
212.39 54.946 207.2 54.946 203.19 52.306 cv
cp
1 /1 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 6364 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/s 400 def
end
PBAAAA+CALIBRI /Encoding get
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 2{/.notdef}rp /E /F 10{/.notdef}rp 
/Q /.notdef /S /T 12{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
2{/.notdef}rp /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
206.2 46.176 mo
(s)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
208.547 46.176 mo
(e)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
211.532 46.176 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 3362 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/d 282 def
end
PBAAAA+CALIBRI /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 2{/.notdef}rp /E /F 10{/.notdef}rp 
/Q /.notdef /S /T 12{/.notdef}rp /a /b /c 
/d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
2{/.notdef}rp /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
214.517 46.176 mo
(d)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
217.669 46.176 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 3986 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/f 296 def
end
PBAAAA+CALIBRI /Encoding get
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 2{/.notdef}rp /E /F 10{/.notdef}rp 
/Q /.notdef /S /T 12{/.notdef}rp /a /b /c 
/d /e /f /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
2{/.notdef}rp /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
219.026 46.176 mo
(f)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
220.857 46.176 mo
(i)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
222.234 46.176 mo
(l)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
223.611 46.176 mo
(e)sh
gsave
246.77 57.706 mo
262.347 57.706 li
262.347 36.5986 li
246.77 36.5986 li
246.77 57.706 li
clp
gsave
246.806 57.7172 mo
262.368 57.7172 li
262.368 36.6714 li
246.806 36.6714 li
246.806 57.7172 li
eclp
246.77 37.9868 mo
249.399 37.9868 li
249.399 36.5986 li
246.77 36.5986 li
cp
.985718 .81619 .255375 .619593 cmyk
ef
257.145 37.9868 mo
259.775 37.9868 li
259.775 36.5986 li
257.145 36.5986 li
cp
ef
249.364 39.3024 mo
254.588 39.3024 li
254.588 37.9142 li
249.364 37.9142 li
cp
ef
249.364 40.618 mo
262.368 40.618 li
262.368 39.2298 li
249.364 39.2298 li
cp
ef
251.957 41.9336 mo
254.588 41.9336 li
254.588 40.5443 li
251.957 40.5443 li
cp
ef
251.957 43.2479 mo
259.775 43.2479 li
259.775 41.8596 li
251.957 41.8596 li
cp
ef
251.957 44.5635 mo
254.588 44.5635 li
254.588 43.1753 li
251.957 43.1753 li
cp
ef
259.739 44.5635 mo
262.368 44.5635 li
262.368 43.1753 li
259.739 43.1753 li
cp
ef
246.77 45.8791 mo
249.399 45.8791 li
249.399 44.4909 li
246.77 44.4909 li
cp
ef
251.957 45.8791 mo
254.588 45.8791 li
254.588 44.4909 li
251.957 44.4909 li
cp
ef
259.739 45.8791 mo
262.368 45.8791 li
262.368 44.4909 li
259.739 44.4909 li
cp
ef
249.364 47.1947 mo
254.588 47.1947 li
254.588 45.8065 li
249.364 45.8065 li
cp
ef
257.145 47.1947 mo
262.368 47.1947 li
262.368 45.8065 li
257.145 45.8065 li
cp
ef
251.957 48.5103 mo
254.588 48.5103 li
254.588 47.1221 li
251.957 47.1221 li
cp
ef
259.739 48.5103 mo
262.368 48.5103 li
262.368 47.1221 li
259.739 47.1221 li
cp
ef
249.364 49.8259 mo
251.994 49.8259 li
251.994 48.4366 li
249.364 48.4366 li
cp
ef
254.551 49.8259 mo
257.181 49.8259 li
257.181 48.4366 li
254.551 48.4366 li
cp
ef
259.739 49.8259 mo
262.368 49.8259 li
262.368 48.4366 li
259.739 48.4366 li
cp
ef
249.364 52.4558 mo
259.775 52.4558 li
259.775 51.0676 li
249.364 51.0676 li
cp
ef
246.77 53.7716 mo
257.181 53.7716 li
257.181 52.3834 li
246.77 52.3834 li
cp
ef
249.364 55.0872 mo
259.775 55.0872 li
259.775 53.6989 li
249.364 53.6989 li
cp
ef
246.77 56.4028 mo
257.181 56.4028 li
257.181 55.0134 li
246.77 55.0134 li
cp
ef
259.739 57.7172 mo
262.368 57.7172 li
262.368 56.329 li
259.739 56.329 li
cp
ef
grestore
gsave
246.77 57.7172 mo
262.368 57.7172 li
262.368 36.5984 li
246.77 36.5984 li
246.77 57.7172 li
eclp
246.829 36.6213 mo
262.356 36.6213 li
.79995 lw
2 lc
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 36.6712 mo
262.368 36.6712 li
262.368 36.5985 li
246.806 36.5985 li
cp
ef
246.829 37.9369 mo
262.356 37.9369 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 37.9868 mo
262.368 37.9868 li
262.368 37.9141 li
246.806 37.9141 li
cp
ef
246.829 39.2525 mo
262.356 39.2525 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 39.3024 mo
262.368 39.3024 li
262.368 39.2297 li
246.806 39.2297 li
cp
ef
246.829 40.5668 mo
262.356 40.5668 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 40.618 mo
262.368 40.618 li
262.368 40.5442 li
246.806 40.5442 li
cp
ef
246.829 41.8824 mo
262.356 41.8824 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 41.9336 mo
262.368 41.9336 li
262.368 41.8598 li
246.806 41.8598 li
cp
ef
246.829 43.198 mo
262.356 43.198 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 43.2479 mo
262.368 43.2479 li
262.368 43.1752 li
246.806 43.1752 li
cp
ef
246.829 44.5136 mo
262.356 44.5136 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 44.5635 mo
262.368 44.5635 li
262.368 44.4908 li
246.806 44.4908 li
cp
ef
246.829 45.8292 mo
262.356 45.8292 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 45.8791 mo
262.368 45.8791 li
262.368 45.8064 li
246.806 45.8064 li
cp
ef
246.829 47.1448 mo
262.356 47.1448 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 47.1947 mo
262.368 47.1947 li
262.368 47.1221 li
246.806 47.1221 li
cp
ef
246.829 48.4595 mo
262.356 48.4595 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 48.5103 mo
262.368 48.5103 li
262.368 48.4365 li
246.806 48.4365 li
cp
ef
246.829 49.7747 mo
262.356 49.7747 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 49.8259 mo
262.368 49.8259 li
262.368 49.7521 li
246.806 49.7521 li
cp
ef
246.829 51.0903 mo
262.356 51.0903 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 51.1406 mo
262.368 51.1406 li
262.368 51.068 li
246.806 51.068 li
cp
ef
246.829 52.4059 mo
262.356 52.4059 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 52.4558 mo
262.368 52.4558 li
262.368 52.3831 li
246.806 52.3831 li
cp
ef
246.829 53.7217 mo
262.356 53.7217 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 53.7716 mo
262.368 53.7716 li
262.368 53.6989 li
246.806 53.6989 li
cp
ef
246.829 55.0361 mo
262.356 55.0361 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 55.0872 mo
262.368 55.0872 li
262.368 55.0134 li
246.806 55.0134 li
cp
ef
246.829 56.3517 mo
262.356 56.3517 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 56.4028 mo
262.368 56.4028 li
262.368 56.329 li
246.806 56.329 li
cp
ef
246.793 36.6213 mo
246.793 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.77 57.7172 mo
246.806 57.7172 li
246.806 36.5985 li
246.77 36.5985 li
cp
ef
249.387 36.6938 mo
249.387 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
249.364 57.7172 mo
249.399 57.7172 li
249.399 36.6715 li
249.364 36.6715 li
cp
ef
251.98 36.6938 mo
251.98 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
251.957 57.7172 mo
251.994 57.7172 li
251.994 36.6715 li
251.957 36.6715 li
cp
ef
254.574 36.6938 mo
254.574 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
254.551 57.7172 mo
254.588 57.7172 li
254.588 36.6715 li
254.551 36.6715 li
cp
ef
257.167 36.6938 mo
257.167 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
257.145 57.7172 mo
257.181 57.7172 li
257.181 36.6715 li
257.145 36.6715 li
cp
ef
259.761 36.6938 mo
259.761 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
259.739 57.7172 mo
259.775 57.7172 li
259.775 36.6715 li
259.739 36.6715 li
cp
ef
246.829 57.6673 mo
262.356 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
246.806 57.7172 mo
262.368 57.7172 li
262.368 57.6446 li
246.806 57.6446 li
cp
ef
262.356 36.6938 mo
262.356 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.333 57.7172 mo
262.368 57.7172 li
262.368 36.6715 li
262.333 36.6715 li
cp
ef
246.793 57.7399 mo
246.793 57.7399 li
.171145 .10779 .0380865 0 cmyk
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
249.387 57.7399 mo
249.387 57.7399 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
251.98 57.7399 mo
251.98 57.7399 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
254.574 57.7399 mo
254.574 57.7399 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
257.167 57.7399 mo
257.167 57.7399 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
259.761 57.7399 mo
259.761 57.7399 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.356 57.7399 mo
262.356 57.7399 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 36.6213 mo
262.391 36.6213 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 37.9369 mo
262.391 37.9369 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 39.2525 mo
262.391 39.2525 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 40.5668 mo
262.391 40.5668 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 41.8824 mo
262.391 41.8824 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 43.198 mo
262.391 43.198 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 44.5136 mo
262.391 44.5136 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 45.8292 mo
262.391 45.8292 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 47.1448 mo
262.391 47.1448 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 48.4595 mo
262.391 48.4595 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 49.7747 mo
262.391 49.7747 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 51.0903 mo
262.391 51.0903 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 52.4059 mo
262.391 52.4059 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 53.7217 mo
262.391 53.7217 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 55.0361 mo
262.391 55.0361 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 56.3517 mo
262.391 56.3517 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
262.391 57.6673 mo
262.391 57.6673 li
gsave
[.0453167 0 0 -.0453503 246.77 57.706 ]ct
@
grestore newpath
grestore
grestore
1.2 lw
[8.4 6 ] 0 dsh
276.81 70.616 mo
199.11 70.616 li
@
193.48 70.616 mo
200.92 66.896 li
199.75 69.236 199.75 71.986 200.92 74.336 cv
193.48 70.616 li
cp
ef
249.17 90.196 mo
248.706 89.881 248.224 89.6028 247.73 89.3618 cv
247.73 88.8675 li
247.791 88.8709 li
247.86 88.7561 li
247.86 76.146 li
249.17 76.146 li
249.17 90.196 li
1 /0 /CSD get_res sepcs
.498039 sep
f
gsave
223.03 76.146 mo
223.03 90.196 li
226.98 92.8659 232.15 92.8659 236.1 90.196 cv
240.05 87.516 245.22 87.516 249.17 90.196 cv
249.17 76.146 li
223.03 76.146 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
249.231 90.3108 mo
249.097 90.3037 li
248.656 90.0042 248.199 89.7385 247.73 89.5067 cv
247.73 89.3618 li
248.224 89.6028 248.706 89.881 249.17 90.196 cv
249.17 76.146 li
247.86 76.146 li
247.86 76.016 li
249.17 76.016 li
249.262 76.0541 li
249.3 76.146 li
249.3 90.196 li
249.231 90.3108 li
f
grestore
gsave
221.59 88.7561 mo
221.59 74.7059 li
247.73 74.7059 li
247.73 88.7561 li
243.78 86.076 238.61 86.076 234.66 88.7561 cv
230.71 91.426 225.54 91.426 221.59 88.7561 cv
eclp
247.6 77.616 mo
246.29 77.616 li
246.29 76.306 li
246.252 76.2141 li
246.16 76.176 li
221.72 76.176 li
221.72 74.8361 li
247.6 74.8361 li
247.6 77.616 li
level3{
gsave
clp
[1 0 0 -1 0 418.966 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [234.66 327.45 234.66 345.01 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
234.66 327.45 234.66 345.01 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
grestore
221.59 88.7561 mo
221.46 88.7561 li
221.46 74.7059 li
221.498 74.6141 li
221.59 74.5761 li
247.73 74.5761 li
247.822 74.6141 li
247.86 74.7059 li
247.86 88.7561 li
247.791 88.8709 li
247.657 88.8635 li
245.704 87.5384 243.45 86.8761 241.195 86.8761 cv
238.94 86.8761 236.686 87.5385 234.733 88.8635 cv
232.736 90.2135 230.43 90.8885 228.125 90.8885 cv
225.82 90.8885 223.514 90.2135 221.517 88.8637 cv
221.46 88.7561 li
221.59 88.7561 li
221.663 88.6483 li
223.616 89.9686 225.87 90.6285 228.125 90.6286 cv
230.38 90.6285 232.634 89.9686 234.587 88.6483 cv
236.584 87.2936 238.889 86.6161 241.195 86.6161 cv
243.5 86.6161 245.806 87.2936 247.803 88.6485 cv
247.73 88.7561 li
247.6 88.7561 li
247.6 74.8361 li
221.72 74.8361 li
221.72 88.7561 li
221.59 88.7561 li
221.663 88.6483 li
221.59 88.7561 li
1 /1 /CSD get_res sepcs
1 sep
f
247.6 91.796 mo
247.303 91.5949 247 91.4091 246.69 91.2383 cv
246.69 89.0547 li
246.997 89.1706 247.301 89.3002 247.6 89.4434 cv
247.6 91.796 li
1 /0 /CSD get_res sepcs
.498039 sep
f
247.6 89.2994 mo
247.301 89.1581 246.997 89.0303 246.69 88.9159 cv
246.69 88.2742 li
246.999 88.4426 247.303 88.6262 247.6 88.8251 cv
247.6 89.2994 li
1 /0 /CSD get_res sepcs
.74902 sep
f
247.6 89.4434 mo
247.301 89.3002 246.997 89.1706 246.69 89.0547 cv
246.69 88.9159 li
246.997 89.0303 247.301 89.1581 247.6 89.2994 cv
247.6 89.4434 li
f
247.6 88.5137 mo
247.303 88.3208 246.999 88.1427 246.69 87.9792 cv
246.69 79.356 li
246.652 79.264 li
246.56 79.2261 li
246.29 79.2261 li
246.29 77.746 li
247.6 77.746 li
247.6 88.5137 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 11.52 125.58 22.646 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 48 
/M[8 0 0 -48 0 48 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A
#RC\A#RC\A#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
~>
<~"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ="pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
247.6 88.8251 mo
247.303 88.6262 246.999 88.4426 246.69 88.2742 cv
246.69 87.9792 li
246.999 88.1427 247.303 88.3208 247.6 88.5137 cv
247.6 77.746 li
247.6 88.8251 li
1 /0 /CSD get_res sepcs
1 sep
f
gsave
221.46 77.746 mo
221.46 91.796 li
225.41 94.4761 230.59 94.4761 234.53 91.796 cv
238.48 89.126 243.66 89.126 247.6 91.796 cv
247.6 77.746 li
221.46 77.746 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
247.661 91.9108 mo
247.527 91.9036 li
247.254 91.7184 246.974 91.5462 246.69 91.387 cv
246.69 91.2383 li
247 91.4091 247.303 91.5949 247.6 91.796 cv
247.6 89.4434 li
247.643 89.4642 247.687 89.4853 247.73 89.5067 cv
247.73 91.796 li
247.661 91.9108 li
1 /0 /CSD get_res sepcs
.498039 sep
f
247.73 89.3618 mo
247.687 89.3407 247.644 89.32 247.6 89.2994 cv
247.6 88.8251 li
247.619 88.8379 247.638 88.8507 247.657 88.8635 cv
247.73 88.8675 li
247.73 89.3618 li
1 /0 /CSD get_res sepcs
.74902 sep
f
247.73 89.5067 mo
247.687 89.4853 247.643 89.4642 247.6 89.4434 cv
247.6 89.2994 li
247.644 89.32 247.687 89.3407 247.73 89.3618 cv
247.73 89.5067 li
f
247.6 77.746 mo
246.29 77.746 li
246.29 77.616 li
247.6 77.616 li
247.6 77.746 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[1.92 0 0 .72 125.58 33.446 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 3 
/M[8 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE~>
<~"pP89"pP89"pP89"pP89"pP89"pP89~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rt~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
247.73 88.8675 mo
247.657 88.8635 li
247.638 88.8507 247.619 88.8379 247.6 88.8251 cv
247.6 77.746 li
247.6 77.616 li
247.692 77.6541 li
247.73 77.746 li
247.73 88.8675 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
220.02 90.356 mo
220.02 76.306 li
246.16 76.306 li
246.16 90.356 li
242.22 87.686 237.04 87.686 233.09 90.356 cv
229.15 93.036 223.97 93.036 220.02 90.356 cv
eclp
220.29 90.3792 mo
220.243 90.3488 220.197 90.318 220.15 90.2869 cv
220.15 76.4361 li
246.03 76.4361 li
246.03 79.2261 li
220.42 79.2261 li
220.328 79.264 li
220.29 79.356 li
220.29 90.3792 li
level3{
gsave
clp
[1 0 0 -1 0 418.966 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [233.09 325.85 233.09 343.41 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
233.09 325.85 233.09 343.41 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
grestore
220.02 90.356 mo
219.89 90.356 li
219.89 76.306 li
219.928 76.2141 li
220.02 76.176 li
246.16 76.176 li
246.252 76.2141 li
246.29 76.306 li
246.29 90.356 li
246.221 90.4708 li
246.087 90.4637 li
244.139 89.1436 241.885 88.4835 239.629 88.4835 cv
237.373 88.4835 235.116 89.1436 233.163 90.4637 cv
231.171 91.8186 228.865 92.4961 226.559 92.4961 cv
224.252 92.4961 221.944 91.8186 219.947 90.4637 cv
219.89 90.356 li
220.02 90.356 li
220.093 90.2484 li
222.046 91.5736 224.303 92.236 226.559 92.236 cv
228.815 92.236 231.069 91.5736 233.017 90.2486 cv
235.014 88.8986 237.322 88.2235 239.629 88.2235 cv
241.935 88.2235 244.241 88.8985 246.233 90.2484 cv
246.16 90.356 li
246.03 90.356 li
246.03 76.4361 li
220.15 76.4361 li
220.15 90.356 li
220.02 90.356 li
220.093 90.2484 li
220.02 90.356 li
1 /1 /CSD get_res sepcs
1 sep
f
226.951 95.416 mo
224.67 95.416 222.39 94.746 220.42 93.406 cv
220.42 90.7685 li
220.717 90.9503 221.021 91.1179 221.33 91.271 cv
221.33 91.796 li
221.46 91.796 li
221.33 91.796 li
221.387 91.9036 li
223.384 93.2585 225.692 93.936 227.999 93.936 cv
230.305 93.936 232.611 93.2585 234.603 91.9038 cv
236.556 90.5835 238.813 89.9235 241.069 89.9235 cv
242.96 89.9235 244.851 90.3875 246.56 91.3154 cv
246.56 93.406 li
244.585 92.066 242.303 91.3961 240.021 91.3961 cv
237.74 91.3961 235.46 92.066 233.49 93.406 cv
231.515 94.746 229.232 95.416 226.951 95.416 cv
1 /0 /CSD get_res sepcs
.498039 sep
f
227.999 93.8061 mo
225.717 93.8061 223.435 93.136 221.46 91.796 cv
221.46 91.3345 li
223.07 92.1089 224.815 92.4961 226.559 92.4961 cv
227.279 92.4961 228 92.4299 228.711 92.2977 cv
228.995 92.3183 229.28 92.3286 229.565 92.3286 cv
231.87 92.3286 234.176 91.6536 236.173 90.3037 cv
237.506 89.3991 238.98 88.8033 240.498 88.5162 cv
242.459 88.6641 244.389 89.3133 246.087 90.4637 cv
246.221 90.4708 li
246.29 90.356 li
246.29 88.9123 li
246.38 88.9426 246.47 88.974 246.56 89.0066 cv
246.56 91.1677 li
244.848 90.2516 242.958 89.7935 241.069 89.7935 cv
238.788 89.7935 236.505 90.461 234.53 91.796 cv
232.56 93.136 230.28 93.8061 227.999 93.8061 cv
1 /0 /CSD get_res sepcs
.74902 sep
f
229.565 92.1985 mo
229.447 92.1985 229.329 92.1967 229.212 92.1931 cv
230.599 91.872 231.94 91.2955 233.163 90.4637 cv
235.116 89.1436 237.373 88.4835 239.629 88.4835 cv
239.751 88.4835 239.873 88.4855 239.996 88.4893 cv
238.629 88.8077 237.308 89.3765 236.1 90.196 cv
234.125 91.531 231.845 92.1985 229.565 92.1985 cv
246.56 88.8684 mo
246.471 88.8363 246.38 88.8051 246.29 88.7753 cv
246.29 88.0666 li
246.381 88.1114 246.47 88.1573 246.56 88.2046 cv
246.56 88.8684 li
1 /0 /CSD get_res sepcs
.87451 sep
f
229.565 92.3286 mo
229.28 92.3286 228.995 92.3183 228.711 92.2977 cv
228.878 92.2665 229.046 92.2316 229.212 92.1931 cv
229.329 92.1967 229.447 92.1985 229.565 92.1985 cv
231.845 92.1985 234.125 91.531 236.1 90.196 cv
237.308 89.3765 238.629 88.8077 239.996 88.4893 cv
240.163 88.4947 240.331 88.5036 240.498 88.5162 cv
238.98 88.8033 237.506 89.3991 236.173 90.3037 cv
234.176 91.6536 231.87 92.3286 229.565 92.3286 cv
246.56 89.0066 mo
246.47 88.974 246.38 88.9426 246.29 88.9123 cv
246.29 88.7753 li
246.38 88.8051 246.471 88.8363 246.56 88.8684 cv
246.56 89.0066 li
f
246.56 87.9116 mo
246.47 87.8656 246.38 87.8209 246.29 87.7774 cv
246.29 79.356 li
246.56 79.356 li
246.56 87.9116 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 9.36 125.58 23.126 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 39 
/M[4 0 0 -39 0 39 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
246.56 88.2046 mo
246.47 88.1573 246.381 88.1114 246.29 88.0666 cv
246.29 87.7774 li
246.38 87.8209 246.47 87.8656 246.56 87.9116 cv
246.56 88.2046 li
1 /0 /CSD get_res sepcs
1 sep
f
227.999 93.936 mo
225.692 93.936 223.384 93.2585 221.387 91.9036 cv
221.33 91.796 li
221.46 91.796 li
221.33 91.796 li
221.33 91.271 li
221.373 91.2925 221.417 91.3137 221.46 91.3345 cv
221.46 91.796 li
221.46 91.796 li
223.435 93.136 225.717 93.8061 227.999 93.8061 cv
230.28 93.8061 232.56 93.136 234.53 91.796 cv
236.505 90.461 238.788 89.7935 241.069 89.7935 cv
242.958 89.7935 244.848 90.2516 246.56 91.1677 cv
246.56 91.3154 li
244.851 90.3875 242.96 89.9235 241.069 89.9235 cv
238.813 89.9235 236.556 90.5835 234.603 91.9038 cv
232.611 93.2585 230.305 93.936 227.999 93.936 cv
1 /0 /CSD get_res sepcs
.74902 sep
f
226.559 92.236 mo
224.428 92.236 222.296 91.6449 220.42 90.4624 cv
220.42 79.356 li
246.03 79.356 li
246.03 90.114 li
244.085 88.8536 241.857 88.2235 239.629 88.2235 cv
237.322 88.2235 235.014 88.8986 233.017 90.2486 cv
231.069 91.5736 228.815 92.236 226.559 92.236 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[26.4 0 0 13.68 99.66 18.806 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 110 
/H 57 
/M[110 0 0 -57 0 57 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
P6p^_U^#]][0P!,`dbZ.f*SM_kQ[L]q$3+5p^*Gsk6A$med&no`IH3`Zj>RqUB^5mP6V);P^i--V$Po^
[Kat]`s98,fRKq-km3^^N!B$+SU]c-XpEP^Jd0R+Z[^q`U'U;qOTq'TmXM*`h$:CobQZ&k]*?pmWdj;`
R0WToP6LF[U^#_+[=?I,`Ws0\f*/5[kQ[N+q1"S5p]Z6QXTd:*^44*,cNgf\Jd(ZJPCEQ;PR$X\Jd&Rd
c%!c`]E[!mWs+(Yq?<(4pBI/mjop>?^BMQ*d!rA+i<H"[KE_C*Q%/3+V?YiZ[fjnYa9B2*fmg"+l3<XZ
qZN)dn:.6`hZgImc32,i]`m!kXFKG`Rg&TkM?KFPkC9U`ecibk`<:bqhuog)nUH`+!!IlVV$,Y)[XZO*
`s'*XJck6>RXb0`P6L[_Jci.XeUP>``!+KkZNGd]ncP)*rreSimK8%C[faj(aFCf)f`\;WJcklPPCN')
U]fQWJcj!p]mnX`X9@_iRfeQNpj\f`k6.miecUL+cNCP(i.%L)nH>!WPQUB(V17>)[KOhWJcjX-X+0A`
RKWHiM$':Nk'sO`eHEVi_ukSni<,g(npcc(JchkPh1)n`bQEG!Jck9?R=G*`JcgT,[0+^(`dbZ(JcgT,
q#ch1p]H*MJci^h`IH3`Zif4gUB9reP61f7P^i-(V$#QU[K=\U`riu(fRKq(kl[@Uq>ui_pOA``joU,9
Jca:#Z[^q`U&ooJPlgB'VLRD'Jc^N*f`J1'l@53'qZ;?NU]TG'[=?I'Jc^N*kQ76'q1"8'Jc`%UepkD`
`<"9cZi].eUB0lcPCEQ5PQC4SV#oKS[K4X&a+(`&fE&#SklR:Sq>le0pAojHJcWUe`.--`ZN5XYKE;+&
Q%/3&JcUH(a8ro&fmg"&JcY`LP6(0&Ujq8&JcUH(f)_t&k^S*~>

%%EndBinary
grestore
np
226.559 92.4961 mo
224.815 92.4961 223.07 92.1089 221.46 91.3345 cv
221.46 91.3345 li
221.417 91.3137 221.373 91.2925 221.33 91.271 cv
221.021 91.1179 220.717 90.9503 220.42 90.7685 cv
220.42 90.4624 li
222.296 91.6449 224.428 92.236 226.559 92.236 cv
228.815 92.236 231.069 91.5736 233.017 90.2486 cv
235.014 88.8986 237.322 88.2235 239.629 88.2235 cv
241.857 88.2235 244.085 88.8536 246.03 90.114 cv
246.03 79.356 li
246.29 79.356 li
246.29 87.7774 li
246.29 88.0666 li
246.29 88.7753 li
246.29 88.9123 li
246.29 90.356 li
246.221 90.4708 li
246.087 90.4637 li
244.389 89.3133 242.459 88.6641 240.498 88.5162 cv
240.331 88.5036 240.163 88.4947 239.996 88.4893 cv
239.996 88.4893 li
239.873 88.4855 239.751 88.4835 239.629 88.4835 cv
237.373 88.4835 235.116 89.1436 233.163 90.4637 cv
231.94 91.2955 230.599 91.872 229.212 92.1931 cv
229.212 92.1931 li
229.046 92.2316 228.878 92.2665 228.711 92.2977 cv
228 92.4299 227.279 92.4961 226.559 92.4961 cv
1 /0 /CSD get_res sepcs
1 sep
f
gsave
220.42 79.356 mo
220.42 93.406 li
224.36 96.086 229.54 96.086 233.49 93.406 cv
237.43 90.7261 242.61 90.7261 246.56 93.406 cv
246.56 79.356 li
220.42 79.356 li
0 -424.034 mo
596.25 -424.034 li
596.25 418.966 li
0 418.966 li
0 -424.034 li
eclp
226.951 95.546 mo
224.645 95.546 222.339 94.8685 220.347 93.5135 cv
220.29 93.406 li
220.42 93.406 li
220.29 93.406 li
220.29 90.6878 li
220.333 90.7151 220.376 90.7419 220.42 90.7685 cv
220.42 93.406 li
220.42 93.406 li
222.39 94.746 224.67 95.416 226.951 95.416 cv
229.232 95.416 231.515 94.746 233.49 93.406 cv
235.46 92.066 237.74 91.3961 240.021 91.3961 cv
242.303 91.3961 244.585 92.066 246.56 93.406 cv
246.56 91.3154 li
246.603 91.339 246.647 91.3628 246.69 91.387 cv
246.69 93.406 li
246.621 93.5209 li
246.487 93.5136 li
244.534 92.1884 242.277 91.526 240.021 91.526 cv
237.765 91.526 235.511 92.1884 233.563 93.5135 cv
231.566 94.8685 229.258 95.546 226.951 95.546 cv
1 /0 /CSD get_res sepcs
.498039 sep
f
246.69 91.2383 mo
246.647 91.2145 246.603 91.191 246.56 91.1677 cv
246.56 89.0066 li
246.603 89.0224 246.647 89.0384 246.69 89.0547 cv
246.69 91.2383 li
1 /0 /CSD get_res sepcs
.74902 sep
f
246.69 88.9159 mo
246.647 88.8998 246.603 88.8839 246.56 88.8684 cv
246.56 88.2046 li
246.603 88.2275 246.647 88.2507 246.69 88.2742 cv
246.69 88.9159 li
1 /0 /CSD get_res sepcs
.87451 sep
f
246.69 89.0547 mo
246.647 89.0384 246.603 89.0224 246.56 89.0066 cv
246.56 88.8684 li
246.603 88.8839 246.647 88.8998 246.69 88.9159 cv
246.69 89.0547 li
f
246.69 87.9792 mo
246.647 87.9564 246.603 87.9338 246.56 87.9116 cv
246.56 79.356 li
246.29 79.356 li
246.29 79.2261 li
246.56 79.2261 li
246.652 79.264 li
246.69 79.356 li
246.69 87.9792 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[.96 0 0 9.36 125.58 23.126 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 39 
/M[4 0 0 -39 0 39 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
246.69 88.2742 mo
246.647 88.2507 246.603 88.2275 246.56 88.2046 cv
246.56 87.9116 li
246.603 87.9338 246.647 87.9564 246.69 87.9792 cv
246.69 88.2742 li
1 /0 /CSD get_res sepcs
1 sep
f
246.69 91.387 mo
246.647 91.3628 246.603 91.339 246.56 91.3154 cv
246.56 91.1677 li
246.603 91.191 246.647 91.2145 246.69 91.2383 cv
246.69 91.387 li
1 /0 /CSD get_res sepcs
.74902 sep
f
220.42 90.4624 mo
220.377 90.4349 220.333 90.4073 220.29 90.3792 cv
220.29 79.356 li
220.328 79.264 li
220.42 79.2261 li
246.03 79.2261 li
246.03 79.356 li
220.42 79.356 li
220.42 90.4624 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 120.42 111.446 ]ct
[26.64 0 0 11.76 99.42 20.726 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 111 
/H 49 
/M[111 0 0 -49 0 49 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
OpUX_U'BQ]Z3Sd,_LKB.dL!/_iWc(]nct>-!""hqn-5Wli!6Rnd!rr_^^/BpYQj+lTEk&nP(3K;PR-^^
U^#]]Zj4p,`.,N-e-N5^Jd1iOP(3H:PmHd^Jd/Uec@<f_^'N6pXp0I^o`gS/r<JVnm00?jh$1:lc%!`_
OpCL\U'9K[Z3J^+_LKB,dKd#\iWZ"[nck8,!!e\mn-+CIZN\^*_gfH,dg*)\Jd(`LP(3K:PR$X\Jd&Lb
c[Wl_^BW0lY6BL]oECD-rW\VlmKJ1G[0=j*`IGT+eHW/[Jd(fNP(3E7Q3Q^ZV?G]Y[KXp*`da-UnH>Qh
i<?Ljd=9#__$8<lYls%hT`sujP(*H8P6LFYJcrC_d!rr_^]i0jYQTO\o)t5+rrnVjmf\4FZin^)`.,N*
e-3#XJckWIP(3H7Pm-RXJciC_c@<f_^'3$jXoj7Xo`LA,r</Dhm/qqB[KFd(`da-SnH4@FZ3/L(_LKB)
dKHfWJckQGP(*H7P6C@WJci=]d!rr_^]`*hYQKIZo)k/*rrePhmfS.DZieX(`.,N)e-)rWJckWIP(3H6
Pm$LWJciC_c@<f_^')shXoj7Xo`LA,r<%WRJciF`c%!`_JcgT,Z3/L(_LKB(JcgT,ncP&)!!@fTJci=]
d!rr_^]T/jJckTHP(3K6PQU@UU]TEUZieX(`.,N(e,ulUj8tqUoE18+rWADfmK03dh?1.fc@<f_^&ilf
JcbTHP(3E3Jc^N*[K=^'`d`RAJc`4Zd=9#__#f2iJcbKEP(*H5Jc^N*ZNAL'_gfH'Jc^N*o)b))J,~>

%%EndBinary
grestore
np
220.42 90.7685 mo
220.376 90.7419 220.333 90.7151 220.29 90.6878 cv
220.29 90.3792 li
220.333 90.4073 220.377 90.4349 220.42 90.4624 cv
220.42 90.7685 li
246.29 79.356 mo
246.03 79.356 li
246.03 79.2261 li
246.29 79.2261 li
246.29 79.356 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
218.98 91.966 mo
218.98 77.916 li
245.12 77.916 li
245.12 91.966 li
241.17 89.286 235.99 89.286 232.05 91.966 cv
228.1 94.6459 222.92 94.6459 218.98 91.966 cv
eclp
218.23 94.726 mo
245.869 94.726 li
245.869 77.169 li
218.23 77.169 li
cp
level3{
gsave
[1 0 0 -1 0 418.966 ]ct
<<
/PatternType 2
/Shading
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [232.05 324.24 232.05 341.8 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!<E3$!W`<%!W`<%!s&E&!s&E&!s/N("9JW)"9JW)"9JW)"9S`+"Tni,"Tni,"Tni
,"p>&/"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#mLS6#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O@"
<$O@"<$j[+=$jd4?$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8mH&.AsI&I]'J&I]*K&If0L&e,9
M&e,<N'+GEO'+PKP'+PNQ'FkWR'Ft`T'b:iU'b:iU'b:lV((_&X((_&X~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /10 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 418.966 ]ct
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U
,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnF$47+I$47+J$O
[=M$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te&J5Te&e
Yfi&eYfi&eYfi',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1N
aU%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]~>
<~zzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8W-!s8
Z/"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&6"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC
\B#mgnE#mgnE#mgnF$47+I$47+J$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lr
sY%hB0]%hB0]%hB0]&.fBa&.fBa&.fBa~>
0 ]
>>
232.05 324.24 232.05 341.8 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/10 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
.26 lw
[] 0 dsh
218.98 91.966 mo
218.98 77.916 li
245.12 77.916 li
245.12 91.966 li
241.17 89.286 235.99 89.286 232.05 91.966 cv
228.1 94.646 222.92 94.646 218.98 91.966 cv
cp
1 /1 /CSD get_res sepcs
1 sep
@
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
226.83 82.136 mo
(n)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
229.982 82.136 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 7296 449 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/w 449 def
end
PBAAAA+CALIBRI /Encoding get
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FBYCQL+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 2{/.notdef}rp /E /F 10{/.notdef}rp 
/Q /.notdef /S /T 12{/.notdef}rp /a /b /c 
/d /e /f /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
/.notdef /w /x /y /z 133{/.notdef}rp]
FBYCQL+CALIBRI nf
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
232.967 82.136 mo
(w)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
237.257 82.136 mo
( )sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
225.14 89.336 mo
(s)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
227.487 89.336 mo
(e)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
230.472 89.336 mo
(e)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
233.457 89.336 mo
(d)sh
FBYCQL+CALIBRI*1 [5.9999 0 0 -5.9999 0 0 ]msf
236.609 89.336 mo
(s)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 ]]
] del_res
/FBYCQL+CALIBRI*1 uf
/FBYCQL+CALIBRI uf
/PBAAAA+CALIBRI uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
